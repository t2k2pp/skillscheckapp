{
  "id": "database",
  "title": "データベーススキルテスト",
  "description": "データベースの基礎から上級まで、実務で必要な知識を測定します。正規化、ER図、トランザクション、インデックス、設計原則まで幅広くカバーします。",
  "version": "1.0.0",
  "author": "Database Learning Team",
  "categories": ["基礎", "中級", "上級"],
  "color": "#FF6B35",
  "questions": [
    {
      "id": 1,
      "level": "基礎",
      "text": "データベースとは何ですか？",
      "options": [
        "データを蓄積するファイル",
        "構造化されたデータの集合体を効率的に管理するシステム",
        "表計算ソフトウェア",
        "単純なデータファイル"
      ],
      "correctAnswerIndex": 1,
      "explanation": "データベースは、構造化されたデータを効率的に格納、検索、更新、削除できるよう設計されたシステムです。データの整合性、セキュリティ、並行制御などの機能も提供します。"
    },
    {
      "id": 2,
      "level": "基礎",
      "text": "リレーショナルデータベースの特徴として正しいものはどれですか？",
      "options": [
        "データは階層構造で管理される",
        "データは表（テーブル）の形式で管理される",
        "データは一つのファイルに格納される",
        "データの順序が重要である"
      ],
      "correctAnswerIndex": 1,
      "explanation": "リレーショナルデータベースでは、データは行と列からなる表（テーブル）の形式で管理されます。テーブル間の関係（リレーション）により、データを効率的に組織化できます。"
    },
    {
      "id": 3,
      "level": "基礎",
      "text": "主キー（Primary Key）の役割として正しいものはどれですか？",
      "options": [
        "テーブル内の各行を一意に識別する",
        "データの並び順を決定する",
        "テーブル間の関連を示す",
        "データの型を定義する"
      ],
      "correctAnswerIndex": 0,
      "explanation": "主キーは、テーブル内の各行（レコード）を一意に識別するための列または列の組み合わせです。重複値やNULL値を持つことはできません。"
    },
    {
      "id": 4,
      "level": "基礎",
      "text": "外部キー（Foreign Key）の役割として正しいものはどれですか？",
      "options": [
        "行を一意に識別する",
        "他のテーブルの主キーを参照して関連を示す",
        "データの型を制限する",
        "インデックスを作成する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "外部キーは、あるテーブルの列が他のテーブルの主キーを参照することで、テーブル間の関連性を維持し、参照整合性を保証します。"
    },
    {
      "id": 5,
      "level": "基礎",
      "text": "正規化の主な目的として正しいものはどれですか？",
      "options": [
        "データの重複を排除し、整合性を保つ",
        "データの検索速度を向上させる",
        "ストレージ容量を拡大する",
        "ユーザーインターフェースを改善する"
      ],
      "correctAnswerIndex": 0,
      "explanation": "正規化は、データの重複（冗長性）を排除し、更新異常、挿入異常、削除異常を防ぐことで、データの整合性を保つことが主な目的です。"
    },
    {
      "id": 6,
      "level": "基礎",
      "text": "第1正規形（1NF）の条件として正しいものはどれですか？",
      "options": [
        "すべての属性が原子値である",
        "部分関数従属性がない",
        "推移関数従属性がない",
        "多値従属性がない"
      ],
      "correctAnswerIndex": 0,
      "explanation": "第1正規形（1NF）では、テーブルのすべての属性（列）が原子値（これ以上分割できない単一の値）でなければなりません。繰り返しグループや配列は許可されません。"
    },
    {
      "id": 7,
      "level": "基礎",
      "text": "第2正規形（2NF）の条件として正しいものはどれですか？",
      "options": [
        "1NFを満たし、すべての非キー属性が主キー全体に完全関数従属している",
        "1NFを満たし、推移関数従属性がない",
        "すべての属性が原子値である",
        "多値従属性がない"
      ],
      "correctAnswerIndex": 0,
      "explanation": "第2正規形（2NF）は、1NFを満たし、かつすべての非キー属性が主キー全体に完全関数従属している状態です。部分関数従属性を排除します。"
    },
    {
      "id": 8,
      "level": "基礎",
      "text": "第3正規形（3NF）の条件として正しいものはどれですか？",
      "options": [
        "2NFを満たし、推移関数従属性がない",
        "1NFを満たし、部分関数従属性がない",
        "すべての属性が原子値である",
        "ボイス・コッド正規形を満たしている"
      ],
      "correctAnswerIndex": 0,
      "explanation": "第3正規形（3NF）は、2NFを満たし、かつ推移関数従属性がない状態です。非キー属性が他の非キー属性に依存することを排除します。"
    },
    {
      "id": 9,
      "level": "基礎",
      "text": "ER図（Entity-Relationship図）において、エンティティを表現する図形はどれですか？",
      "options": [
        "四角形",
        "楕円形",
        "ひし形",
        "三角形"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ER図では、エンティティ（実体）は四角形で表現されます。楕円形は属性、ひし形はリレーションシップ（関連）を表します。"
    },
    {
      "id": 10,
      "level": "基礎",
      "text": "ER図において、属性を表現する図形はどれですか？",
      "options": [
        "四角形",
        "楕円形",
        "ひし形",
        "円形"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ER図では、属性は楕円形で表現されます。主キー属性は楕円形に下線を引いて表現することが一般的です。"
    },
    {
      "id": 11,
      "level": "基礎",
      "text": "ER図において、エンティティ間の関連を表現する図形はどれですか？",
      "options": [
        "四角形",
        "楕円形",
        "ひし形",
        "六角形"
      ],
      "correctAnswerIndex": 2,
      "explanation": "ER図では、エンティティ間の関連（リレーションシップ）はひし形で表現されます。関連の種類（1対1、1対多、多対多）も併せて記載されます。"
    },
    {
      "id": 12,
      "level": "基礎",
      "text": "1対多の関連において、「1」側のエンティティを何と呼びますか？",
      "options": [
        "子エンティティ",
        "親エンティティ",
        "従属エンティティ",
        "参照エンティティ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "1対多の関連では、「1」側を親エンティティ、「多」側を子エンティティと呼びます。子エンティティは親エンティティの主キーを外部キーとして持ちます。"
    },
    {
      "id": 13,
      "level": "基礎",
      "text": "トランザクションの特性を表すACIDのうち、「A」が表すものはどれですか？",
      "options": [
        "Atomicity（原子性）",
        "Availability（可用性）",
        "Accuracy（正確性）",
        "Authorization（承認）"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ACIDのAは原子性（Atomicity）を表します。トランザクション内のすべての操作が完全に実行されるか、全く実行されないかのどちらかになることを保証します。"
    },
    {
      "id": 14,
      "level": "基礎",
      "text": "トランザクションのACIDのうち、「C」が表すものはどれですか？",
      "options": [
        "Consistency（一貫性）",
        "Concurrency（同時性）",
        "Completeness（完全性）",
        "Compatibility（互換性）"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ACIDのCは一貫性（Consistency）を表します。トランザクション実行前後でデータベースの整合性制約が保たれることを保証します。"
    },
    {
      "id": 15,
      "level": "基礎",
      "text": "トランザクションのACIDのうち、「I」が表すものはどれですか？",
      "options": [
        "Isolation（独立性）",
        "Integrity（整合性）",
        "Implementation（実装）",
        "Interface（インターフェース）"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ACIDのIは独立性（Isolation）を表します。同時実行される複数のトランザクションが互いに影響を与えないことを保証します。"
    },
    {
      "id": 16,
      "level": "基礎",
      "text": "トランザクションのACIDのうち、「D」が表すものはどれですか？",
      "options": [
        "Durability（永続性）",
        "Dependency（依存性）",
        "Distribution（分散）",
        "Documentation（文書化）"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ACIDのDは永続性（Durability）を表します。コミットされたトランザクションの結果は、システム障害が発生しても失われないことを保証します。"
    },
    {
      "id": 17,
      "level": "基礎",
      "text": "インデックス（索引）の主な目的として正しいものはどれですか？",
      "options": [
        "データの検索速度を向上させる",
        "データの整合性を保つ",
        "ストレージ容量を削減する",
        "データの重複を防ぐ"
      ],
      "correctAnswerIndex": 0,
      "explanation": "インデックスの主な目的は、データの検索速度を向上させることです。特定の列に対する検索、ソート、結合操作を高速化します。"
    },
    {
      "id": 18,
      "level": "基礎",
      "text": "NULL値の特徴として正しいものはどれですか？",
      "options": [
        "値が0と等しい",
        "値が空文字列と等しい",
        "値が不明または存在しないことを表す",
        "値がfalseと等しい"
      ],
      "correctAnswerIndex": 2,
      "explanation": "NULL値は、値が不明（unknown）または存在しない（missing）ことを表す特別な値です。0や空文字列とは異なります。"
    },
    {
      "id": 19,
      "level": "基礎",
      "text": "データ型として一般的でないものはどれですか？",
      "options": [
        "INTEGER（整数型）",
        "VARCHAR（可変長文字列型）",
        "DATE（日付型）",
        "RAINBOW（虹型）"
      ],
      "correctAnswerIndex": 3,
      "explanation": "RAINBOW（虹型）は存在しないデータ型です。一般的なデータ型には、INTEGER、VARCHAR、CHAR、DATE、DECIMAL、BOOLEANなどがあります。"
    },
    {
      "id": 20,
      "level": "基礎",
      "text": "データベースの制約（constraint）として一般的でないものはどれですか？",
      "options": [
        "NOT NULL制約",
        "UNIQUE制約",
        "CHECK制約",
        "COLOR制約"
      ],
      "correctAnswerIndex": 3,
      "explanation": "COLOR制約は存在しません。一般的な制約には、NOT NULL、UNIQUE、PRIMARY KEY、FOREIGN KEY、CHECKなどがあります。"
    },
    {
      "id": 21,
      "level": "中級",
      "text": "ボイス・コッド正規形（BCNF）の条件として正しいものはどれですか？",
      "options": [
        "3NFを満たし、すべての決定子が候補キーである",
        "2NFを満たし、推移関数従属性がない",
        "1NFを満たし、部分関数従属性がない",
        "4NFを満たし、結合従属性がない"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ボイス・コッド正規形（BCNF）は、3NFを満たし、かつすべての決定子が候補キーである状態です。より厳密な正規化を実現します。"
    },
    {
      "id": 22,
      "level": "中級",
      "text": "第4正規形（4NF）で排除される従属性はどれですか？",
      "options": [
        "関数従属性",
        "部分関数従属性",
        "推移関数従属性",
        "多値従属性"
      ],
      "correctAnswerIndex": 3,
      "explanation": "第4正規形（4NF）は、BCNFを満たし、かつ多値従属性を排除した状態です。一つの属性が他の複数の属性に独立して依存する状況を解決します。"
    },
    {
      "id": 23,
      "level": "中級",
      "text": "第5正規形（5NF）で排除される従属性はどれですか？",
      "options": [
        "関数従属性",
        "多値従属性",
        "結合従属性",
        "推移関数従属性"
      ],
      "correctAnswerIndex": 2,
      "explanation": "第5正規形（5NF）は、4NFを満たし、かつ結合従属性を排除した状態です。テーブルがそのプロジェクションの結合で再構築できない状況を解決します。"
    },
    {
      "id": 24,
      "level": "中級",
      "text": "非正規化を行う主な理由として正しいものはどれですか？",
      "options": [
        "データの整合性を向上させるため",
        "データの重複を増やすため",
        "検索性能を向上させるため",
        "ストレージ容量を削減するため"
      ],
      "correctAnswerIndex": 2,
      "explanation": "非正規化は、検索性能を向上させるために意図的に行われる設計手法です。データの重複を許容して結合操作を減らし、クエリの実行速度を向上させます。"
    },
    {
      "id": 25,
      "level": "中級",
      "text": "クラスター化インデックス（Clustered Index）の特徴として正しいものはどれですか？",
      "options": [
        "テーブルごとに複数作成できる",
        "データの物理的な並び順を決定する",
        "検索のみに使用される",
        "メモリ上にのみ存在する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "クラスター化インデックスは、テーブル内のデータの物理的な並び順を決定します。テーブルごとに1つしか作成できません。"
    },
    {
      "id": 26,
      "level": "中級",
      "text": "非クラスター化インデックス（Non-Clustered Index）の特徴として正しいものはどれですか？",
      "options": [
        "データの物理的な並び順を決定する",
        "テーブルごとに1つしか作成できない",
        "データへのポインタを持つ別構造として存在する",
        "主キーに自動的に作成される"
      ],
      "correctAnswerIndex": 2,
      "explanation": "非クラスター化インデックスは、実際のデータとは別の構造として存在し、データ行へのポインタを持ちます。テーブルごとに複数作成できます。"
    },
    {
      "id": 27,
      "level": "中級",
      "text": "複合インデックス（Composite Index）の利用に関して正しいものはどれですか？",
      "options": [
        "インデックスの列順序は検索性能に影響しない",
        "すべての列を検索条件に含める必要がある",
        "左端の列から順に使用された場合に効果的",
        "単一列インデックスより常に高速"
      ],
      "correctAnswerIndex": 2,
      "explanation": "複合インデックスは、左端の列から順に使用された場合に最も効果的です。途中の列を飛ばした検索では、インデックスの恩恵を受けにくくなります。"
    },
    {
      "id": 28,
      "level": "中級",
      "text": "ビュー（View）の特徴として正しくないものはどれですか？",
      "options": [
        "複数のテーブルを結合して仮想的なテーブルを作成できる",
        "データのセキュリティを向上させることができる",
        "実際のデータを物理的に保存する",
        "複雑なクエリを簡素化できる"
      ],
      "correctAnswerIndex": 2,
      "explanation": "ビューは仮想的なテーブルであり、実際のデータを物理的に保存しません。基底テーブルから動的にデータを取得して表示します。"
    },
    {
      "id": 29,
      "level": "中級",
      "text": "ストアドプロシージャの利点として正しくないものはどれですか？",
      "options": [
        "実行速度の向上",
        "ネットワーク通信量の削減",
        "データベースの可搬性向上",
        "セキュリティの向上"
      ],
      "correctAnswerIndex": 2,
      "explanation": "ストアドプロシージャはデータベース固有の機能であるため、可搬性（他のDBMSへの移植性）を低下させる場合があります。"
    },
    {
      "id": 30,
      "level": "中級",
      "text": "トリガー（Trigger）の特徴として正しいものはどれですか？",
      "options": [
        "明示的に呼び出して実行する",
        "データの変更に応じて自動的に実行される",
        "戻り値を持つことができる",
        "パラメータを受け取ることができる"
      ],
      "correctAnswerIndex": 1,
      "explanation": "トリガーは、INSERT、UPDATE、DELETEなどのデータ変更操作に応じて自動的に実行される特別なストアドプロシージャです。"
    },
    {
      "id": 31,
      "level": "中級",
      "text": "デッドロックが発生する条件として正しいものはどれですか？",
      "options": [
        "単一のトランザクションが長時間実行される",
        "複数のトランザクションが互いにリソースを待ち合う",
        "データベースの容量が不足する",
        "インデックスが適切に設定されていない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "デッドロックは、複数のトランザクションが互いに相手の持つリソースの解放を待ち合う状態で発生します。循環待ちが生じることが特徴です。"
    },
    {
      "id": 32,
      "level": "中級",
      "text": "分離レベル（Isolation Level）の「READ UNCOMMITTED」で発生する可能性がある現象はどれですか？",
      "options": [
        "デッドロック",
        "ダーティリード",
        "ファントムリード",
        "ロストアップデート"
      ],
      "correctAnswerIndex": 1,
      "explanation": "READ UNCOMMITTEDでは、他のトランザクションによる未コミットの変更を読み取る可能性があり、これをダーティリードと呼びます。"
    },
    {
      "id": 33,
      "level": "中級",
      "text": "分離レベル「REPEATABLE READ」でも発生する可能性がある現象はどれですか？",
      "options": [
        "ダーティリード",
        "ノンリピータブルリード",
        "ファントムリード",
        "すべて発生しない"
      ],
      "correctAnswerIndex": 2,
      "explanation": "REPEATABLE READでは、ダーティリードとノンリピータブルリードは防げますが、ファントムリード（他のトランザクションによる行の挿入・削除）は発生する可能性があります。"
    },
    {
      "id": 34,
      "level": "中級",
      "text": "楽観的ロック（Optimistic Locking）の特徴として正しいものはどれですか？",
      "options": [
        "データ読み取り時にロックを取得する",
        "競合が少ない環境で効果的",
        "デッドロックが発生しやすい",
        "同時実行性が低い"
      ],
      "correctAnswerIndex": 1,
      "explanation": "楽観的ロックは、競合が少ない環境で効果的です。更新時に競合をチェックし、競合があれば処理を再実行します。"
    },
    {
      "id": 35,
      "level": "中級",
      "text": "悲観的ロック（Pessimistic Locking）の特徴として正しいものはどれですか？",
      "options": [
        "更新時に競合をチェックする",
        "データ読み取り時にロックを取得する",
        "競合が少ない環境で効果的",
        "ロック取得のオーバーヘッドがない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "悲観的ロックは、データ読み取り時にロックを取得し、他のトランザクションによる変更を事前に防ぎます。競合が多い環境で有効です。"
    },
    {
      "id": 36,
      "level": "中級",
      "text": "データベースの水平分割（Horizontal Partitioning）の特徴として正しいものはどれですか？",
      "options": [
        "テーブルの列を分割する",
        "テーブルの行を複数のテーブルに分割する",
        "データベース全体を複製する",
        "インデックスを分割する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "水平分割（シャーディング）は、テーブルの行を特定の条件に基づいて複数のテーブルやデータベースに分割する手法です。"
    },
    {
      "id": 37,
      "level": "中級",
      "text": "データベースの垂直分割（Vertical Partitioning）の特徴として正しいものはどれですか？",
      "options": [
        "テーブルの行を分割する",
        "テーブルの列を複数のテーブルに分割する",
        "データベース全体を複製する",
        "インデックスを複製する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "垂直分割は、テーブルの列を機能や使用頻度に基づいて複数のテーブルに分割する手法です。アクセスパターンに応じた最適化が可能です。"
    },
    {
      "id": 38,
      "level": "中級",
      "text": "マスタースレーブ構成の特徴として正しいものはどれですか？",
      "options": [
        "すべてのサーバーで書き込みが可能",
        "マスターで書き込み、スレーブで読み取りを分担",
        "データの整合性が保証されない",
        "単一障害点がない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "マスタースレーブ構成では、マスターサーバーが書き込み処理を担当し、スレーブサーバーが読み取り処理を分担することで負荷を分散します。"
    },
    {
      "id": 39,
      "level": "中級",
      "text": "データウェアハウスの特徴として正しくないものはどれですか？",
      "options": [
        "履歴データを長期間保存する",
        "OLAP処理に最適化されている",
        "リアルタイムトランザクション処理に最適",
        "複数のデータソースから統合される"
      ],
      "correctAnswerIndex": 2,
      "explanation": "データウェアハウスはOLAP（分析処理）に最適化されており、リアルタイムトランザクション処理（OLTP）には適していません。"
    },
    {
      "id": 40,
      "level": "中級",
      "text": "OLTPとOLAPの違いとして正しいものはどれですか？",
      "options": [
        "OLTPは分析処理、OLAPは取引処理",
        "OLTPは取引処理、OLAPは分析処理",
        "両方とも同じ処理タイプ",
        "OLTPはバッチ処理、OLAPはリアルタイム処理"
      ],
      "correctAnswerIndex": 1,
      "explanation": "OLTP（Online Transaction Processing）は日常的な取引処理、OLAP（Online Analytical Processing）は分析処理を指します。"
    },
    {
      "id": 41,
      "level": "上級",
      "text": "CAP定理の3つの要素として正しい組み合わせはどれですか？",
      "options": [
        "Consistency、Availability、Performance",
        "Consistency、Availability、Partition tolerance",
        "Concurrency、Availability、Performance",
        "Consistency、Accuracy、Partition tolerance"
      ],
      "correctAnswerIndex": 1,
      "explanation": "CAP定理は、分散システムにおいてConsistency（一貫性）、Availability（可用性）、Partition tolerance（分断耐性）の3つを同時に満たすことは不可能であることを示す定理です。"
    },
    {
      "id": 42,
      "level": "上級",
      "text": "ACID特性とBASE特性の主な違いとして正しいものはどれですか？",
      "options": [
        "ACIDは分散システム用、BASEは単一システム用",
        "ACIDは厳密な整合性、BASEは結果整合性",
        "ACIDは非同期処理、BASEは同期処理",
        "本質的な違いはない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ACID特性は厳密な整合性を重視するのに対し、BASE特性は結果整合性（Eventually Consistent）を許容し、可用性とスケーラビリティを優先します。"
    },
    {
      "id": 43,
      "level": "上級",
      "text": "NoSQLデータベースの種類として正しくないものはどれですか？",
      "options": [
        "ドキュメント指向データベース",
        "キー値ストア",
        "グラフデータベース",
        "リレーショナルデータベース"
      ],
      "correctAnswerIndex": 3,
      "explanation": "リレーショナルデータベースはSQLデータベースの代表格であり、NoSQLデータベースには含まれません。NoSQLには、ドキュメント指向、キー値ストア、列指向、グラフデータベースがあります。"
    },
    {
      "id": 44,
      "level": "上級",
      "text": "MapReduceパラダイムの特徴として正しいものはどれですか？",
      "options": [
        "単一マシンでの高速処理に特化",
        "Map段階とReduce段階で分散処理を行う",
        "リアルタイム処理に最適化",
        "小規模データ処理に適している"
      ],
      "correctAnswerIndex": 1,
      "explanation": "MapReduceは、Map段階でデータを並列処理し、Reduce段階で結果を集約する分散処理パラダイムです。大規模データのバッチ処理に適しています。"
    },
    {
      "id": 45,
      "level": "上級",
      "text": "データベースシャーディングの課題として正しくないものはどれですか？",
      "options": [
        "クロスシャードクエリの複雑さ",
        "データの再配置の困難さ",
        "単一障害点の問題",
        "結合操作の制限"
      ],
      "correctAnswerIndex": 2,
      "explanation": "シャーディングは分散処理により単一障害点を排除する手法です。ただし、クロスシャードクエリの複雑さ、データ再配置の困難さ、結合操作の制限などの課題があります。"
    },
    {
      "id": 46,
      "level": "上級",
      "text": "データベースレプリケーションの種類として正しくないものはどれですか？",
      "options": [
        "同期レプリケーション",
        "非同期レプリケーション",
        "半同期レプリケーション",
        "循環レプリケーション"
      ],
      "correctAnswerIndex": 3,
      "explanation": "循環レプリケーションは一般的な分類ではありません。主な種類は、同期レプリケーション、非同期レプリケーション、半同期レプリケーションです。"
    },
    {
      "id": 47,
      "level": "上級",
      "text": "分散データベースにおける2フェーズコミット（2PC）の問題点として正しいものはどれですか？",
      "options": [
        "データの整合性が保証されない",
        "コーディネーターが単一障害点になる",
        "パフォーマンスが向上しすぎる",
        "実装が簡単すぎる"
      ],
      "correctAnswerIndex": 1,
      "explanation": "2フェーズコミットでは、コーディネーターが単一障害点となり、コーディネーターに障害が発生すると全体の処理が停止する可能性があります。"
    },
    {
      "id": 48,
      "level": "上級",
      "text": "Sagaパターンの特徴として正しいものはどれですか？",
      "options": [
        "分散トランザクションを同期的に処理する",
        "各ステップに対応する補償トランザクションを定義する",
        "ACIDプロパティを完全に保証する",
        "単一データベース内でのみ使用する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Sagaパターンでは、長時間実行されるトランザクションを複数のステップに分割し、各ステップが失敗した場合の補償トランザクション（Compensating Transaction）を定義します。"
    },
    {
      "id": 49,
      "level": "上級",
      "text": "データベースの論理的設計フェーズで作成される成果物として適切でないものはどれですか？",
      "options": [
        "概念データモデル（ER図）",
        "論理データモデル（関係スキーマ）",
        "物理ファイル配置設計",
        "正規化されたテーブル設計"
      ],
      "correctAnswerIndex": 2,
      "explanation": "物理ファイル配置設計は物理設計フェーズで行われます。論理設計では、ER図、関係スキーマ、正規化などの論理構造を設計します。"
    },
    {
      "id": 50,
      "level": "上級",
      "text": "データベースの物理設計フェーズで決定する事項として適切でないものはどれですか？",
      "options": [
        "インデックス設計",
        "ファイル配置とストレージ設計",
        "エンティティ関連の定義",
        "パーティショニング戦略"
      ],
      "correctAnswerIndex": 2,
      "explanation": "エンティティ関連の定義は論理設計フェーズで行います。物理設計では、インデックス、ファイル配置、パーティショニングなどの物理的な実装を決定します。"
    },
    {
      "id": 51,
      "level": "上級",
      "text": "データベースチューニングにおけるクエリ実行プラン分析で注目すべき指標として最も重要でないものはどれですか？",
      "options": [
        "テーブルスキャンの有無",
        "結合方法の種類",
        "推定行数と実際の行数の乖離",
        "テーブル名の長さ"
      ],
      "correctAnswerIndex": 3,
      "explanation": "テーブル名の長さは実行性能にほとんど影響しません。テーブルスキャン、結合方法、推定行数と実際の乖離などが重要な指標です。"
    },
    {
      "id": 52,
      "level": "上級",
      "text": "データベースの高可用性を実現する手法として適切でないものはどれですか？",
      "options": [
        "クラスタリング",
        "レプリケーション",
        "フェイルオーバー",
        "データ削除"
      ],
      "correctAnswerIndex": 3,
      "explanation": "データ削除は高可用性の実現手法ではありません。クラスタリング、レプリケーション、フェイルオーバーなどが一般的な高可用性実現手法です。"
    },
    {
      "id": 53,
      "level": "上級",
      "text": "データベースセキュリティにおける認証（Authentication）と認可（Authorization）の違いとして正しいものはどれですか？",
      "options": [
        "認証は権限確認、認可は身元確認",
        "認証は身元確認、認可は権限確認",
        "両方とも同じ概念",
        "認証は暗号化、認可は復号化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "認証（Authentication）はユーザーの身元確認、認可（Authorization）はユーザーの権限確認を行います。「あなたは誰か」と「あなたに何を許可するか」の違いです。"
    },
    {
      "id": 54,
      "level": "上級",
      "text": "データベース暗号化の種類として適切でないものはどれですか？",
      "options": [
        "透過的データ暗号化（TDE）",
        "列レベル暗号化",
        "ネットワーク暗号化",
        "日付暗号化"
      ],
      "correctAnswerIndex": 3,
      "explanation": "日付暗号化は一般的な暗号化分類ではありません。TDE、列レベル暗号化、ネットワーク暗号化（SSL/TLS）が主要な暗号化手法です。"
    },
    {
      "id": 55,
      "level": "上級",
      "text": "データベース監査において記録すべき情報として最も重要でないものはどれですか？",
      "options": [
        "アクセス日時",
        "実行されたSQL文",
        "アクセス元IPアドレス",
        "データベース管理者の趣味"
      ],
      "correctAnswerIndex": 3,
      "explanation": "データベース管理者の趣味は監査に関係ありません。アクセス日時、SQL文、IPアドレス、ユーザーIDなどが重要な監査情報です。"
    },
    {
      "id": 56,
      "level": "上級",
      "text": "データマイニングにおけるOLAP操作として適切でないものはどれですか？",
      "options": [
        "ドリルダウン",
        "ドリルアップ",
        "ピボット",
        "データ削除"
      ],
      "correctAnswerIndex": 3,
      "explanation": "データ削除はOLAP操作ではありません。ドリルダウン（詳細表示）、ドリルアップ（集約表示）、ピボット（軸の回転）、スライシング、ダイシングなどがOLAP操作です。"
    },
    {
      "id": 57,
      "level": "上級",
      "text": "データウェアハウスのETL処理において、「T」が表すものはどれですか？",
      "options": [
        "Transport（転送）",
        "Transform（変換）",
        "Table（テーブル）",
        "Transaction（トランザクション）"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ETLのTは変換（Transform）を表します。Extract（抽出）、Transform（変換）、Load（読み込み）の一連の処理です。"
    },
    {
      "id": 58,
      "level": "上級",
      "text": "データ品質管理において重要な観点として適切でないものはどれですか？",
      "options": [
        "完全性（Completeness）",
        "一意性（Uniqueness）",
        "適時性（Timeliness）",
        "美観性（Aesthetics）"
      ],
      "correctAnswerIndex": 3,
      "explanation": "美観性はデータ品質の観点ではありません。完全性、一意性、適時性、正確性、整合性、妥当性などが重要な品質観点です。"
    },
    {
      "id": 59,
      "level": "上級",
      "text": "ビッグデータの基本的な「3V」として適切でない組み合わせはどれですか？",
      "options": [
        "Volume、Velocity、Variety",
        "Volume、Velocity、Value",
        "Volume、Variety、Veracity",
        "Volume、Velocity、Visibility"
      ],
      "correctAnswerIndex": 3,
      "explanation": "Visibilityはビッグデータの特徴を表す概念ではありません。基本的な3Vは、Volume（量）、Velocity（速度）、Variety（多様性）です。Value（価値）、Veracity（正確性）は後から追加された拡張概念ですが、Visibilityは含まれません。"
    },
    {
      "id": 60,
      "level": "上級",
      "text": "データレイクとデータウェアハウスの主な違いとして正しいものはどれですか？",
      "options": [
        "データレイクは構造化データのみ、データウェアハウスは非構造化データのみ",
        "データレイクは生データ保存、データウェアハウスは処理済みデータ保存",
        "データレイクは小容量、データウェアハウスは大容量",
        "本質的な違いはない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "データレイクは構造化・非構造化を問わず生データを保存し、データウェアハウスは特定の目的のために処理・構造化されたデータを保存します。"
    },
    {
      "id": 61,
      "level": "上級",
      "text": "マイクロサービスアーキテクチャにおけるDatabase per Serviceパターンの利点として正しくないものはどれですか？",
      "options": [
        "サービス間の独立性向上",
        "技術選択の自由度向上",
        "データ整合性の完全保証",
        "スケーラビリティの向上"
      ],
      "correctAnswerIndex": 2,
      "explanation": "Database per Serviceパターンでは、サービス間でのデータ整合性の完全保証は困難になります。結果整合性やSagaパターンなどで対応する必要があります。"
    },
    {
      "id": 62,
      "level": "上級",
      "text": "イベントソーシングパターンの特徴として正しいものはどれですか？",
      "options": [
        "現在の状態のみを保存する",
        "すべての変更イベントを時系列で保存する",
        "データの削除が容易",
        "ストレージ容量を大幅に削減できる"
      ],
      "correctAnswerIndex": 1,
      "explanation": "イベントソーシングでは、データの現在の状態ではなく、すべての変更イベントを時系列で保存し、必要に応じて状態を再構築します。"
    },
    {
      "id": 63,
      "level": "上級",
      "text": "CQRS（Command Query Responsibility Segregation）パターンの特徴として正しいものはどれですか？",
      "options": [
        "読み書きに同じモデルを使用する",
        "読み取り用と書き込み用でモデルを分離する",
        "単一のデータベースのみ使用する",
        "同期処理のみサポートする"
      ],
      "correctAnswerIndex": 1,
      "explanation": "CQRSパターンでは、読み取り（Query）用と書き込み（Command）用でモデルを分離し、それぞれに最適化された設計を行います。"
    },
    {
      "id": 64,
      "level": "上級",
      "text": "データベース接続プールの設定において考慮すべき要素として最も重要でないものはどれですか？",
      "options": [
        "最大接続数",
        "接続タイムアウト時間",
        "接続の検証方法",
        "データベース管理者の名前"
      ],
      "correctAnswerIndex": 3,
      "explanation": "データベース管理者の名前は接続プールの設定に影響しません。最大接続数、タイムアウト、検証方法、プール初期化サイズなどが重要な設定項目です。"
    },
    {
      "id": 65,
      "level": "上級",
      "text": "データベースの災害復旧計画において定義すべき指標として適切でないものはどれですか？",
      "options": [
        "RTO（Recovery Time Objective）",
        "RPO（Recovery Point Objective）",
        "RBO（Recovery Budget Objective）",
        "MTTR（Mean Time To Recovery）"
      ],
      "correctAnswerIndex": 2,
      "explanation": "RBO（Recovery Budget Objective）は一般的な災害復旧指標ではありません。RTO（目標復旧時間）、RPO（目標復旧時点）、MTTR（平均復旧時間）が重要な指標です。"
    },
    {
      "id": 66,
      "level": "上級",
      "text": "データベース容量計画において考慮すべき要素として最も重要でないものはどれですか？",
      "options": [
        "データ成長率",
        "インデックスサイズ",
        "ログファイルサイズ",
        "開発者の経験年数"
      ],
      "correctAnswerIndex": 3,
      "explanation": "開発者の経験年数は直接的な容量計画要素ではありません。データ成長率、インデックス、ログファイル、バックアップ、一時領域などを考慮する必要があります。"
    },
    {
      "id": 67,
      "level": "上級",
      "text": "データベースパフォーマンス監視において測定すべきメトリクスとして適切でないものはどれですか？",
      "options": [
        "CPU使用率",
        "I/O待機時間",
        "メモリ使用率",
        "デスクの整理整頓状況"
      ],
      "correctAnswerIndex": 3,
      "explanation": "デスクの整理整頓状況はデータベースパフォーマンスとは無関係です。CPU、メモリ、I/O、ネットワーク、クエリ実行時間などが重要なメトリクスです。"
    },
    {
      "id": 68,
      "level": "上級",
      "text": "データガバナンスの構成要素として適切でないものはどれですか？",
      "options": [
        "データ品質管理",
        "データセキュリティ",
        "データライフサイクル管理",
        "データ作成者の血液型"
      ],
      "correctAnswerIndex": 3,
      "explanation": "データ作成者の血液型はデータガバナンスとは無関係です。データ品質、セキュリティ、ライフサイクル、プライバシー、コンプライアンスなどが重要な構成要素です。"
    },
    {
      "id": 69,
      "level": "上級",
      "text": "データプライバシー保護における仮名化（Pseudonymization）の特徴として正しいものはどれですか？",
      "options": [
        "データを完全に削除する",
        "識別子を仮名に置き換えるが復元可能",
        "データを暗号化して読み取り不可能にする",
        "データの精度を意図的に下げる"
      ],
      "correctAnswerIndex": 1,
      "explanation": "仮名化は、個人識別子を仮名に置き換える手法で、追加情報があれば元の個人を特定可能です。匿名化よりもプライバシー保護レベルは低くなります。"
    },
    {
      "id": 70,
      "level": "上級",
      "text": "データベース設計における概念レベル、論理レベル、物理レベルの3層スキーマアーキテクチャにおいて、論理レベルで定義される内容として適切でないものはどれですか？",
      "options": [
        "テーブル定義",
        "関係の定義",
        "ファイル配置",
        "制約の定義"
      ],
      "correctAnswerIndex": 2,
      "explanation": "ファイル配置は物理レベルで定義されます。論理レベルではテーブル、関係、制約、ビューなどの論理構造を定義します。"
    },
    {
      "id": 71,
      "level": "上級",
      "text": "分散データベースシステムにおけるコンセンサスアルゴリズムとして適切でないものはどれですか？",
      "options": [
        "Raft",
        "PBFT（Practical Byzantine Fault Tolerance）",
        "Paxos",
        "HTTP（HyperText Transfer Protocol）"
      ],
      "correctAnswerIndex": 3,
      "explanation": "HTTPは通信プロトコルであり、コンセンサスアルゴリズムではありません。Raft、PBFT、Paxosなどが代表的なコンセンサスアルゴリズムです。"
    },
    {
      "id": 72,
      "level": "上級",
      "text": "時系列データベースの特徴として正しくないものはどれですか？",
      "options": [
        "時刻をキーとしたデータ管理",
        "高速な書き込み性能",
        "データの圧縮機能",
        "複雑なトランザクション処理"
      ],
      "correctAnswerIndex": 3,
      "explanation": "時系列データベースは、シンプルな書き込みと読み取りに最適化されており、複雑なトランザクション処理は得意ではありません。"
    },
    {
      "id": 73,
      "level": "上級",
      "text": "インメモリデータベースの利点として正しくないものはどれですか？",
      "options": [
        "高速なデータアクセス",
        "低レイテンシ",
        "永続性の保証",
        "リアルタイム分析"
      ],
      "correctAnswerIndex": 2,
      "explanation": "インメモリデータベースは、データをメモリに保存するため、電源が切れるとデータが失われる可能性があります。永続化のための仕組みが別途必要です。"
    },
    {
      "id": 74,
      "level": "上級",
      "text": "多次元データベース（MOLAP）の特徴として正しいものはどれですか？",
      "options": [
        "行ベースでデータを格納する",
        "キューブ構造でデータを事前集計する",
        "リアルタイムトランザクション処理に最適",
        "非構造化データの処理が得意"
      ],
      "correctAnswerIndex": 1,
      "explanation": "MOLAPは、多次元キューブ構造でデータを事前集計して格納し、OLAP操作を高速化します。分析処理に特化したアーキテクチャです。"
    },
    {
      "id": 75,
      "level": "上級",
      "text": "データベース技術の進歩において最も重要な要因として正しいものはどれですか？",
      "options": [
        "技術者の個人的な好み",
        "ビジネス要件の変化とスケーラビリティの需要",
        "データベースベンダーのマーケティング戦略",
        "プログラミング言語の流行"
      ],
      "correctAnswerIndex": 1,
      "explanation": "データベース技術の進歩は、変化するビジネス要件（ビッグデータ、リアルタイム処理、高可用性など）とスケーラビリティの需要が主な推進力となっています。"
    }
  ]
}