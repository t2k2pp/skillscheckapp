{
  "id": "smartdb-gold",
  "title": "SmartDB GOLD 認定スキルテスト",
  "description": "SmartDB GOLDレベルの高度なデータベース管理スキルを測定します。上級者向けのパフォーマンス最適化、セキュリティ設計、高可用性構成、運用自動化まで幅広くカバーします。",
  "version": "1.0.0",
  "author": "SmartDB Learning Team",
  "categories": ["上級", "エキスパート", "認定試験"],
  "totalQuestions": 75,
  "estimatedTime": "75-90分",
  "coverImage": "smartdb-gold-logo.png",
  "color": "#FFD700",
  "passingScore": 75,
  "questions": [
    {
      "id": 1,
      "level": "Advanced",
      "text": "SmartDBの高可用性構成において、RPOを1分以内に設定する場合に最適な構成はどれですか？",
      "options": [
        "シングルインスタンス構成",
        "Data Guard構成",
        "RAC + Data Guard構成",
        "Golden Gate構成"
      ],
      "correctAnswerIndex": 2,
      "explanation": "RPO 1分以内という厳しい要求では、RAC（Real Application Clusters）とData Guardの組み合わせが最適です。RACで高可用性を、Data Guardで災害対策を実現できます。"
    },
    {
      "id": 2,
      "level": "Expert",
      "text": "SmartDBでパーティション表の性能を最適化する際、最も効果的なパーティション戦略はどれですか？",
      "options": [
        "Range Partitioning のみ",
        "Hash Partitioning のみ",
        "Composite Partitioning（Range-Hash）",
        "List Partitioning のみ"
      ],
      "correctAnswerIndex": 2,
      "explanation": "大規模データに対してはComposite Partitioning（Range-Hash）が最も効果的です。Rangeで時系列データを分割し、Hashで並列処理性能を向上させます。"
    },
    {
      "id": 3,
      "level": "Advanced",
      "text": "SmartDBのExadata環境でStorage Indexを最大限活用するための設計原則として正しいものはどれですか？",
      "options": [
        "全てのテーブルにStorage Indexを適用",
        "WHERE句で頻繁に使用される列を考慮した物理配置",
        "Storage IndexはORACLE内部で自動最適化されるため設計不要",
        "全ての列に対してStorage Indexを作成"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Storage IndexはWHERE句で頻繁に使用される列の物理配置を考慮することで効果を最大化できます。自動作成されますが、設計による最適化が重要です。"
    },
    {
      "id": 4,
      "level": "Expert",
      "text": "SmartDBでのマルチテナント環境において、Container Database（CDB）とPluggable Database（PDB）のリソース管理で正しい設定方法はどれですか？",
      "options": [
        "CDBレベルでのリソース制限のみ",
        "PDBレベルでのリソース制限のみ",
        "CDBとPDB両方でのリソース制限とResource Manager",
        "自動リソース管理に完全依存"
      ],
      "correctAnswerIndex": 2,
      "explanation": "マルチテナント環境では、CDBレベルで全体のリソース管理を行い、各PDBで個別のリソース制限とResource Managerによる詳細制御を組み合わせることが重要です。"
    },
    {
      "id": 5,
      "level": "Advanced",
      "text": "SmartDBでのApplication Continuity（AC）を実装する際の重要な考慮事項はどれですか？",
      "options": [
        "全てのアプリケーションで自動的に有効",
        "特定のSQL文のみ対象",
        "セッション状態とトランザクション状態の管理",
        "読み取り専用トランザクションのみ対応"
      ],
      "correctAnswerIndex": 2,
      "explanation": "Application Continuityではセッション状態とトランザクション状態の適切な管理が必要です。セッション変数、カーソル、トランザクションの状態を正確に復旧する必要があります。"
    },
    {
      "id": 6,
      "level": "Expert",
      "text": "SmartDBのIn-Memory Database機能で、コンプレッション率と検索性能のバランスを取る最適な設定はどれですか？",
      "options": [
        "FOR QUERY LOWコンプレッション",
        "FOR QUERY HIGHコンプレッション",
        "FOR CAPACITY LOWコンプレッション",
        "データ特性に応じた適応的設定"
      ],
      "correctAnswerIndex": 3,
      "explanation": "In-Memory Databaseでは、データ特性（更新頻度、検索パターン、データサイズ）に応じてコンプレッションレベルを適応的に設定することが最適です。"
    },
    {
      "id": 7,
      "level": "Advanced",
      "text": "SmartDBでのPartition Wise JoinでCPUリソースを最大限活用するための設計で正しいものはどれですか？",
      "options": [
        "パーティション数は2の倍数に制限",
        "パーティション数をCPUコア数の倍数に設定",
        "全てのテーブルを同じパーティション戦略で統一",
        "パーティション数は素数に設定"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Partition Wise JoinでCPU並列処理を最大化するには、パーティション数をCPUコア数の倍数に設定し、並列度を最適化することが重要です。"
    },
    {
      "id": 8,
      "level": "Expert",
      "text": "SmartDBでReal-Time SQL Monitoringの結果を自動化スクリプトで活用する場合、最も効果的な方法はどれですか？",
      "options": [
        "V$SQL_MONITORビューの定期的なスナップショット",
        "DBMS_SQLTUNE.REPORT_SQL_MONITORの自動実行",
        "AWRレポートとの統合分析",
        "V$SQL_MONITORとDBMS_SQLTUNE両方の組み合わせ"
      ],
      "correctAnswerIndex": 3,
      "explanation": "自動化では、V$SQL_MONITORビューでリアルタイム監視を行い、DBMS_SQLTUNE.REPORT_SQL_MONITORでレポート生成を組み合わせることで包括的な分析が可能です。"
    },
    {
      "id": 9,
      "level": "Advanced",
      "text": "SmartDBのAdvanced Security Option（ASO）でTDE（Transparent Data Encryption）を実装する際の性能影響を最小化する方法はどれですか？",
      "options": [
        "全てのテーブルスペースを暗号化",
        "機密データを含むテーブルスペースのみ暗号化",
        "列レベル暗号化の積極的な活用",
        "暗号化を無効化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "TDEの性能影響を最小化するには、機密データを含むテーブルスペースのみを選択的に暗号化し、必要な部分に限定することが効果的です。"
    },
    {
      "id": 10,
      "level": "Expert",
      "text": "SmartDBでのシャーディング環境において、グローバルトランザクションの整合性を保証する最適な方法はどれですか？",
      "options": [
        "2-Phase Commitプロトコル",
        "Distributed Transactionの無効化",
        "各シャードでの独立トランザクション",
        "XA Transactionの使用"
      ],
      "correctAnswerIndex": 0,
      "explanation": "シャーディング環境でのグローバルトランザクション整合性には2-Phase Commitプロトコルが標準的で確実な方法です。XAも有効ですが、実装の複雑さを考慮する必要があります。"
    },
    {
      "id": 11,
      "level": "Advanced",
      "text": "SmartDBのExadata Smart Scanを最大限活用するSQLの書き方として正しいものはどれですか？",
      "options": [
        "複雑なJOINを避けてシンプルなクエリを書く",
        "WHERE句での列フィルタを積極的に使用",
        "ROWNUM疑似列を活用",
        "ネストしたサブクエリを多用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Exadata Smart ScanはWHERE句での列フィルタリングをStorage Cell レベルで実行するため、適切なフィルタ条件を使用することで効果を最大化できます。"
    },
    {
      "id": 12,
      "level": "Expert",
      "text": "SmartDBでのData Guard環境において、Logical Standbyの利用が適している場面はどれですか？",
      "options": [
        "完全にReadOnlyなレポート環境",
        "スタンバイでの追加スキーマ作成が必要な場合",
        "最小限のラグでの災害対策",
        "全てのケースでPhysical Standbyより優秀"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Logical Standbyは、スタンバイ側で追加のスキーマやオブジェクトを作成でき、レポート用途での拡張性が必要な場合に適しています。"
    },
    {
      "id": 13,
      "level": "Advanced",
      "text": "SmartDBでHybrid Columnar Compression（HCC）を使用する際、最適な圧縮レベルの選択基準はどれですか？",
      "options": [
        "常に最高レベルのARCHIVE HIGHを使用",
        "データの更新頻度と圧縮率のバランス",
        "ストレージ容量のみを考慮",
        "圧縮は性能劣化を招くため使用しない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "HCCでは、データの更新頻度と圧縮率のバランスを考慮する必要があります。頻繁に更新されるデータでは軽い圧縮を、履歴データでは高い圧縮レベルを選択します。"
    },
    {
      "id": 14,
      "level": "Expert",
      "text": "SmartDBでのSQL Plan Managementにおいて、既存のSQL実行計画の性能劣化を防ぐ最適なアプローチはどれですか？",
      "options": [
        "全てのSQL文に対して計画固定",
        "重要なSQL文のBaselineを作成してEvolution機能を活用",
        "Optimizer統計の更新を停止",
        "手動でのヒント追加のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "SQL Plan Managementでは重要なSQL文のBaselineを作成し、Evolution機能によって新しい実行計画を検証してから採用することで性能劣化を防げます。"
    },
    {
      "id": 15,
      "level": "Advanced",
      "text": "SmartDBの統計情報の自動収集で、大規模テーブルの統計精度と収集時間のバランスを取る設定はどれですか？",
      "options": [
        "ESTIMATE_PERCENT を AUTO に設定",
        "手動でのサンプリング率を1%に固定",
        "統計収集を無効化",
        "全行スキャンによる正確な統計のみ"
      ],
      "correctAnswerIndex": 0,
      "explanation": "ESTIMATE_PERCENTをAUTOに設定することで、Oracleが自動的にテーブルサイズに応じた適切なサンプリング率を決定し、精度と性能のバランスを取ります。"
    },
    {
      "id": 16,
      "level": "Expert",
      "text": "SmartDBでのConnection Pooling環境において、接続リークを防止する最適な設定はどれですか？",
      "options": [
        "Connection Timeout の無効化",
        "最大接続数を無制限に設定",
        "Connection Validation とTimeout の適切な組み合わせ",
        "Connection Poolingを使用しない"
      ],
      "correctAnswerIndex": 2,
      "explanation": "接続リークを防ぐには、Connection ValidationによるConnection状態チェックと適切なTimeout設定の組み合わせが重要です。"
    },
    {
      "id": 17,
      "level": "Advanced",
      "text": "SmartDBでのContinuous Query Notification（CQN）を活用する際の設計上の注意点はどれですか？",
      "options": [
        "全てのテーブルに対してCQNを有効化",
        "対象テーブルの選択とコールバック処理の効率性",
        "CQNは古い機能のため使用しない",
        "CQNは自動的に最適化される"
      ],
      "correctAnswerIndex": 1,
      "explanation": "CQNでは対象テーブルを慎重に選択し、コールバック処理が効率的に実行されるよう設計することで、システム全体への影響を最小化できます。"
    },
    {
      "id": 18,
      "level": "Expert",
      "text": "SmartDBでのFlashback Technology使用時、大量のDMLが発生する環境での適切なUndo管理方法はどれですか？",
      "options": [
        "Undo Retention を無制限に設定",
        "Undo Tablespace サイズを最小限に抑制",
        "ワークロードパターンに基づくUndo Retention と Tablespace サイズ設定",
        "Flashback機能を無効化"
      ],
      "correctAnswerIndex": 2,
      "explanation": "大量のDML環境では、ワークロードパターンを分析してUndo Retentionと Tablespace サイズを適切に設定することで、Flashback機能とパフォーマンスを両立できます。"
    },
    {
      "id": 19,
      "level": "Advanced",
      "text": "SmartDBでのResult Cache機能を効果的に活用するクエリの特徴として正しいものはどれですか？",
      "options": [
        "頻繁に更新されるテーブルを対象とするクエリ",
        "実行頻度が高く結果が比較的安定したクエリ",
        "一度だけ実行されるバッチクエリ",
        "大量の行を返すクエリ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Result Cacheは実行頻度が高く、結果が比較的安定したクエリで効果を発揮します。データ変更が頻繁な場合はキャッシュの無効化コストが高くなります。"
    },
    {
      "id": 20,
      "level": "Expert",
      "text": "SmartDBでのSecure External Password Store使用時のセキュリティ強化策として最適なものはどれですか？",
      "options": [
        "パスワードストアファイルのパーミッション管理",
        "パスワードの平文保存",
        "全ユーザーアクセス可能に設定",
        "パスワードストアの使用を避ける"
      ],
      "correctAnswerIndex": 0,
      "explanation": "Secure External Password Storeではストアファイルの適切なパーミッション管理（600等）とファイルシステムレベルのアクセス制御が重要なセキュリティ要素です。"
    },
    {
      "id": 21,
      "level": "Advanced",
      "text": "SmartDBでのAdvanced Queuing（AQ）において、メッセージ処理の高可用性を実現する方法はどれですか？",
      "options": [
        "単一のQueueで全メッセージを処理",
        "複数のQueueと並列処理の組み合わせ",
        "同期処理のみ使用",
        "キューイング機能を使用しない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Advanced Queuingの高可用性には、複数のQueueによる負荷分散と並列処理を組み合わせることで、単一障害点を回避し処理能力を向上できます。"
    },
    {
      "id": 22,
      "level": "Expert",
      "text": "SmartDBでのオンライン操作（Online Operations）において、インデックスの再作成時にロック競合を最小化する方法はどれですか？",
      "options": [
        "CREATE INDEX ONLINE の使用",
        "メンテナンスウィンドウでの一括処理",
        "インデックスの削除と再作成の分離",
        "インデックス再作成を避ける"
      ],
      "correctAnswerIndex": 0,
      "explanation": "CREATE INDEX ONLINEを使用することで、インデックス再作成中もDML操作が継続でき、ロック競合を最小化できます。"
    },
    {
      "id": 23,
      "level": "Advanced",
      "text": "SmartDBでのDatabase Links使用時、リモートデータベースとの接続障害に対する適切な対処方法はどれですか？",
      "options": [
        "接続タイムアウトを無制限に設定",
        "Connection Pooling と Retry Logic の実装",
        "Database Links の完全な回避",
        "手動での接続管理のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Database Links使用時は、Connection PoolingとRetry Logicを適切に実装することで、ネットワーク障害や一時的な接続問題に対する耐性を向上できます。"
    },
    {
      "id": 24,
      "level": "Expert",
      "text": "SmartDBでのWorkload Repository（AWR）データの長期保管戦略として最適なものはどれですか？",
      "options": [
        "全AWRデータの永続保管",
        "保管期間の設定と定期的なデータ削除",
        "AWRデータの保管を最小限に制限",
        "外部ストレージへの完全移行"
      ],
      "correctAnswerIndex": 1,
      "explanation": "AWRデータは適切な保管期間を設定し、古いデータを定期的に削除することで、ストレージ使用量とパフォーマンス分析能力のバランスを取ることができます。"
    },
    {
      "id": 25,
      "level": "Advanced",
      "text": "SmartDBでのOracle Text索引の最適化において、大量のドキュメント更新がある環境での推奨設定はどれですか？",
      "options": [
        "リアルタイムでの索引更新",
        "バッチでの索引更新とCTX_DDL.SYNC_INDEX",
        "索引の自動最適化に完全依存",
        "Oracle Text索引を使用しない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大量のドキュメント更新がある場合は、バッチでの索引更新とCTX_DDL.SYNC_INDEXの定期実行により、索引の断片化を抑制し性能を維持できます。"
    },
    {
      "id": 26,
      "level": "Expert",
      "text": "SmartDBでのVirtual Private Database（VPD）実装時、動的ポリシーの性能影響を最小化する方法はどれですか？",
      "options": [
        "全テーブルに同一ポリシーを適用",
        "ポリシー関数のResult CacheとContext最適化",
        "VPDポリシーを使用しない",
        "静的ポリシーのみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "VPD動的ポリシーでは、ポリシー関数のResult Cacheを活用し、Contextの最適化により関数実行コストを削減することで性能影響を最小化できます。"
    },
    {
      "id": 27,
      "level": "Advanced",
      "text": "SmartDBでのData Pump使用時、大容量データの効率的なエクスポート/インポートを実現する設定はどれですか？",
      "options": [
        "PARALLEL=1 で安定性重視",
        "適切なPARALLEL設定とCOMPRESSION=ALL",
        "COMPRESSION を無効化",
        "単一ファイルでの処理"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大容量データでは、システムリソースに応じたPARALLEL設定とCOMPRESSION=ALLにより、処理時間短縮とファイルサイズ削減を両立できます。"
    },
    {
      "id": 28,
      "level": "Expert",
      "text": "SmartDBでのEdition-Based Redefinition使用時、アプリケーションの無停止アップグレードで重要な考慮事項はどれですか？",
      "options": [
        "全てのオブジェクトを一度に移行",
        "段階的な移行とEdition間のデータ整合性管理",
        "Edition機能を使用しない",
        "ダウンタイムでの一括移行"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Edition-Based Redefinitionでは段階的な移行を行い、Edition間でのデータ整合性を適切に管理することで、無停止でのアップグレードを実現できます。"
    },
    {
      "id": 29,
      "level": "Advanced",
      "text": "SmartDBでのOracle Database Firewall統合時の最適なセキュリティポリシー設計原則はどれですか？",
      "options": [
        "全SQLステートメントの許可",
        "ホワイトリストベースの厳格な制御",
        "ログ記録のみでブロックしない",
        "ファイアウォール機能を無効化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Database Firewallではホワイトリストベースの厳格な制御により、許可されたSQLパターンのみを通すことで、SQLインジェクション等の攻撃を効果的に防げます。"
    },
    {
      "id": 30,
      "level": "Expert",
      "text": "SmartDBでのGlobal Data Services（GDS）を使用したサービス指向アーキテクチャにおいて、データ局所性を最適化する方法はどれですか？",
      "options": [
        "全サービスを同一リージョンに配置",
        "地理的分散とサービス親和性の組み合わせ",
        "データレプリケーションを避ける",
        "中央集権的なデータ管理のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "GDSでは地理的分散配置とサービス親和性を組み合わせることで、データアクセスの局所性を向上し、ネットワーク遅延を最小化できます。"
    },
    {
      "id": 31,
      "level": "Advanced",
      "text": "SmartDBでのIn-Memory Column Store使用時、ハイブリッドワークロード（OLTP+OLAP）の最適化方法はどれですか？",
      "options": [
        "全テーブルをIn-Memory化",
        "アクセスパターン分析に基づく選択的In-Memory化",
        "In-Memory機能を使用しない",
        "OLTP処理のみIn-Memory化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ハイブリッドワークロードでは、アクセスパターン分析により分析系クエリが多いテーブルを選択的にIn-Memory化することで、効果的な性能向上を実現できます。"
    },
    {
      "id": 32,
      "level": "Expert",
      "text": "SmartDBでのActive Session History（ASH）データ分析において、パフォーマンス問題の根本原因特定に最も効果的な手法はどれですか？",
      "options": [
        "Wait Event の頻度分析のみ",
        "時系列分析とTop SQL、Wait Event の総合分析",
        "CPU使用率の監視のみ",
        "ASHデータを使用しない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ASH分析では、時系列でのパフォーマンス変化を把握し、Top SQLとWait Eventを総合的に分析することで、問題の根本原因を効果的に特定できます。"
    },
    {
      "id": 33,
      "level": "Advanced",
      "text": "SmartDBでのOracle GoldenGate統合において、データ整合性を保証しながら最高性能を実現する設定はどれですか？",
      "options": [
        "CHECKPOINTSECS=1で頻繁なチェックポイント",
        "適切なCOMMITSEQS設定とバッチ処理の最適化",
        "チェックポイントを無効化",
        "同期レプリケーションのみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "GoldenGateでは適切なCOMMITSEQS設定によりトランザクション整合性を保ちながら、バッチ処理最適化で性能を向上できます。"
    },
    {
      "id": 34,
      "level": "Expert",
      "text": "SmartDBでのDatabase Resource Manager使用時、コンテナ環境での適切なリソース配分戦略はどれですか？",
      "options": [
        "全PDBに均等なリソース配分",
        "Business Critical度に応じた優先度設定と動的調整",
        "リソース制限を設けない",
        "最も負荷の高いPDBに全リソース割り当て"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Resource Managerでは、各PDBのBusiness Critical度に応じた優先度設定と、負荷状況に応じた動的なリソース調整が最適なリソース活用を実現します。"
    },
    {
      "id": 35,
      "level": "Advanced",
      "text": "SmartDBでのSQL Performance Analyzer（SPA）を活用したシステム変更影響評価で最も重要な評価指標はどれですか？",
      "options": [
        "実行時間の変化のみ",
        "実行時間、CPU使用量、I/O量の総合評価",
        "SQL実行回数のみ",
        "メモリ使用量のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "SPAでは実行時間、CPU使用量、I/O量を総合的に評価することで、システム変更がパフォーマンスに与える影響を多角的に把握できます。"
    },
    {
      "id": 36,
      "level": "Expert",
      "text": "SmartDBでのAdvanced Compression使用時、更新頻度の高いテーブルでの最適な圧縮戦略はどれですか？",
      "options": [
        "最高レベルの圧縮を常に適用",
        "更新パターンに応じた適応的圧縮レベル選択",
        "圧縮を使用しない",
        "読み取り専用データのみ圧縮"
      ],
      "correctAnswerIndex": 1,
      "explanation": "更新頻度の高いテーブルでは、更新パターン分析に基づいて適応的に圧縮レベルを選択することで、圧縮効果と更新性能のバランスを最適化できます。"
    },
    {
      "id": 37,
      "level": "Advanced",
      "text": "SmartDBでのDatabase Resident Connection Pooling（DRCP）において、接続効率を最大化する設定はどれですか？",
      "options": [
        "最小プール数を1に設定",
        "アプリケーション特性に応じたプール設定とタイムアウト調整",
        "無制限のプールサイズ",
        "DRCPを使用しない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "DRCPでは、アプリケーションの接続パターンに応じてプールサイズとタイムアウト値を調整することで、リソース効率と接続レスポンスのバランスを最適化できます。"
    },
    {
      "id": 38,
      "level": "Expert",
      "text": "SmartDBでのExadata Smart Flash Cache活用時、I/Oパフォーマンスを最大化するアプリケーション設計のポイントはどれですか？",
      "options": [
        "大量のランダムI/Oを生成",
        "適度なI/Oパターンとキャッシュ親和性の高いクエリ設計",
        "Flash Cacheを無効化",
        "シーケンシャルI/Oのみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Smart Flash Cacheでは、適度なI/Oパターンとキャッシュヒット率の高いクエリ設計により、Flash Cacheの効果を最大化してI/Oパフォーマンスを向上できます。"
    },
    {
      "id": 39,
      "level": "Advanced",
      "text": "SmartDBでのOracle Data Mining統合において、大規模データセットでのモデル学習効率化の方法はどれですか？",
      "options": [
        "全データを一度にメモリに読み込み",
        "サンプリングと並列処理の活用",
        "単一スレッドでの逐次処理",
        "データマイニング機能を使用しない"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大規模データセットでは、適切なサンプリング手法と並列処理を活用することで、学習効率を向上しながらモデルの精度を維持できます。"
    },
    {
      "id": 40,
      "level": "Expert",
      "text": "SmartDBでのAdvanced Security使用時、監査ログの効率的な管理戦略として最適なものはどれですか？",
      "options": [
        "全操作の詳細監査ログ保存",
        "リスクベース監査とログローテーション管理",
        "監査ログを保存しない",
        "エラーイベントのみ監査"
      ],
      "correctAnswerIndex": 1,
      "explanation": "監査ログ管理では、リスクベースアプローチによる重要操作の選択的監査と、適切なログローテーション管理により効率性とセキュリティを両立できます。"
    },
    {
      "id": 41,
      "level": "Advanced",
      "text": "SmartDBでのZero Data Loss Recovery Appliance（ZDLRA）統合時の最適なバックアップ戦略はどれですか？",
      "options": [
        "フルバックアップのみ実行",
        "増分バックアップとリアルタイム保護の組み合わせ",
        "バックアップを実行しない",
        "ログファイルバックアップのみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ZDLRAでは増分バックアップとリアルタイム保護機能を組み合わせることで、ストレージ効率とデータ保護レベルを最大化できます。"
    },
    {
      "id": 42,
      "level": "Expert",
      "text": "SmartDBでのマルチマスターレプリケーション環境において、データコンフリクト解決の最適な戦略はどれですか？",
      "options": [
        "タイムスタンプベースの自動解決のみ",
        "ビジネスルールに基づくカスタム解決ロジック",
        "コンフリクトを無視",
        "マニュアルでの解決のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "マルチマスターレプリケーションでは、ビジネスルールに基づくカスタムコンフリクト解決ロジックを実装することで、データ整合性とビジネス要件を両立できます。"
    },
    {
      "id": 43,
      "level": "Advanced",
      "text": "SmartDBでのOracle Spatial and Graph使用時、大量地理空間データの効率的なクエリ最適化方法はどれですか？",
      "options": [
        "全データの線形検索",
        "空間インデックスとパーティション戦略の組み合わせ",
        "空間機能を使用しない",
        "メモリ内検索のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大量地理空間データでは、R-Tree等の空間インデックスと地理的パーティション戦略を組み合わせることで、クエリパフォーマンスを大幅に向上できます。"
    },
    {
      "id": 44,
      "level": "Expert",
      "text": "SmartDBでのApplication Express（APEX）高負荷環境での性能最適化において最も重要な要素はどれですか？",
      "options": [
        "APEXバージョンのアップグレードのみ",
        "コネクションプール設定とSQL最適化の統合的アプローチ",
        "静的ファイルのキャッシュ無効化",
        "APEX機能を最小限に制限"
      ],
      "correctAnswerIndex": 1,
      "explanation": "APEX高負荷環境では、適切なコネクションプール設定と背後で実行されるSQLの最適化を統合的に行うことで、効果的な性能改善を実現できます。"
    },
    {
      "id": 45,
      "level": "Advanced",
      "text": "SmartDBでのDistributed SQL処理において、ネットワーク遅延を最小化する最適化手法はどれですか？",
      "options": [
        "全データをローカルに複製",
        "クエリプッシュダウンと実行計画の最適化",
        "分散処理を避ける",
        "同期処理のみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "分散SQL処理では、クエリプッシュダウンによりデータ移動量を削減し、実行計画最適化でネットワーク通信を最小化することが効果的です。"
    },
    {
      "id": 46,
      "level": "Expert",
      "text": "SmartDBでのOracle Machine Learning使用時、インメモリデータベースとの連携で最高の学習性能を実現する方法はどれですか？",
      "options": [
        "全データをディスクから読み込み",
        "In-Memory Column StoreとVector処理の最適化",
        "機械学習機能を使用しない",
        "単一スレッドでの学習"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Oracle Machine Learningでは、In-Memory Column StoreとVector処理最適化により、大量データに対する機械学習アルゴリズムの実行性能を大幅に向上できます。"
    },
    {
      "id": 47,
      "level": "Advanced",
      "text": "SmartDBでのBlockchain Table使用時、データ整合性とパフォーマンスのバランスを取る設計原則はどれですか？",
      "options": [
        "全テーブルをBlockchain化",
        "重要データの選択的Blockchain化とハッシュチェーン最適化",
        "Blockchain機能を使用しない",
        "パフォーマンスを犠牲にして整合性を最優先"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Blockchain Tableでは、重要なデータのみ選択的にBlockchain化し、ハッシュチェーン処理を最適化することで、データ整合性とパフォーマンスを両立できます。"
    },
    {
      "id": 48,
      "level": "Expert",
      "text": "SmartDBでのJSON Document Store使用時、リレーショナルデータとの効率的な統合方法はどれですか？",
      "options": [
        "JSONデータとリレーショナルデータを完全分離",
        "JSON_VALUE関数と仮想列を活用したハイブリッドアプローチ",
        "JSONデータを使用しない",
        "全データをJSONに変換"
      ],
      "correctAnswerIndex": 1,
      "explanation": "JSON Document Storeでは、JSON_VALUE関数と仮想列を活用することで、JSONの柔軟性とリレーショナルデータの構造化の利点を両立できます。"
    },
    {
      "id": 49,
      "level": "Advanced",
      "text": "SmartDBでのReal Application Testing使用時、本番環境を模擬した負荷テストで重要な考慮事項はどれですか？",
      "options": [
        "テストデータ量のみ本番と同等にする",
        "ワークロードパターン、データ分布、時間的変動の総合的再現",
        "単純な負荷生成のみ",
        "テスト環境は本番より小規模で十分"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Real Application Testingでは、ワークロードパターン、データ分布、時間的変動を総合的に再現することで、本番環境により近い負荷テストを実現できます。"
    },
    {
      "id": 50,
      "level": "Expert",
      "text": "SmartDBでのOracle REST Data Services（ORDS）使用時、RESTAPIの高性能化に最も効果的な手法はどれですか？",
      "options": [
        "全APIでデータベース接続を新規作成",
        "コネクションプールとSQL結果キャッシュの最適化",
        "REST機能を使用しない",
        "同期処理のみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ORDSでの高性能化には、適切なコネクションプール設定とSQL結果キャッシュ最適化により、データベース接続オーバーヘッドとクエリ実行コストを削減することが効果的です。"
    },
    {
      "id": 51,
      "level": "Advanced",
      "text": "SmartDBでのHierarchical Query処理において、大規模階層データでの性能最適化方法はどれですか？",
      "options": [
        "CONNECT BYクエリの無制限使用",
        "適切なインデックス戦略とSTART WITH句の最適化",
        "階層クエリを使用しない",
        "全データをメモリに展開"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大規模階層データでは、階層列に適切なインデックスを作成し、START WITH句で検索開始点を絞り込むことで、CONNECT BY処理の性能を大幅に改善できます。"
    },
    {
      "id": 52,
      "level": "Expert",
      "text": "SmartDBでのPivot/Unpivot操作において、大量データでの効率的な処理を実現する方法はどれですか？",
      "options": [
        "メモリ内での全データ処理",
        "並列処理とパーティション単位でのPivot処理",
        "Pivot操作を避ける",
        "単一スレッドでの逐次処理"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大量データのPivot処理では、並列処理を活用し、パーティション単位でPivot操作を行うことで、メモリ使用量を制御しながら処理性能を向上できます。"
    },
    {
      "id": 53,
      "level": "Advanced",
      "text": "SmartDBでのOracle Database Vault統合時、職責分離を実現しながら運用効率を維持する方法はどれですか？",
      "options": [
        "全ユーザーに同等の権限を付与",
        "ロールベースアクセス制御と運用タスクの自動化",
        "Database Vaultを使用しない",
        "管理者権限の集中化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Database Vaultでは、ロールベースアクセス制御により職責分離を実現し、定型運用タスクの自動化により効率性を維持することが重要です。"
    },
    {
      "id": 54,
      "level": "Expert",
      "text": "SmartDBでのAdvanced Analytics使用時、統計関数とウィンドウ関数を効率的に活用するクエリ設計のポイントはどれですか？",
      "options": [
        "全ての分析をアプリケーション層で実行",
        "データベース内分析とパーティション戦略の組み合わせ",
        "統計関数を使用しない",
        "メモリ外での処理のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Advanced Analyticsでは、データベース内での統計分析と適切なパーティション戦略を組み合わせることで、データ移動コストを削減し分析性能を最大化できます。"
    },
    {
      "id": 55,
      "level": "Advanced",
      "text": "SmartDBでのResource-Intensive操作（大量データ処理）において、システム全体への影響を最小化する方法はどれですか？",
      "options": [
        "Resource Manager による優先度制御と実行時間分散",
        "全リソースを一つの処理に集中",
        "リソース制御を行わない",
        "処理を完全に停止"
      ],
      "correctAnswerIndex": 0,
      "explanation": "Resource Managerを使用して処理優先度を制御し、大量データ処理を時間分散することで、システム全体のサービスレベルを維持できます。"
    },
    {
      "id": 56,
      "level": "Expert",
      "text": "SmartDBでのOracle Label Security使用時、多階層セキュリティレベルでのデータアクセス制御の最適化方法はどれですか？",
      "options": [
        "全データに最高機密レベルを設定",
        "データ分類に基づく適応的ラベル設定とアクセスパスの最適化",
        "セキュリティレベルを設定しない",
        "単一レベルのセキュリティのみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Oracle Label Securityでは、データの機密度分類に基づいて適応的にラベルを設定し、アクセスパスを最適化することで、セキュリティと性能を両立できます。"
    },
    {
      "id": 57,
      "level": "Advanced",
      "text": "SmartDBでのExternal Table使用時、大容量ファイルからの効率的なデータロード戦略はどれですか？",
      "options": [
        "単一のExternal Tableで全ファイル処理",
        "並列処理とファイル分割によるExternal Table最適化",
        "External Tableを使用しない",
        "メモリ内での全ファイル処理"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大容量ファイル処理では、並列処理対応のExternal Table設定とファイル分割により、I/O性能とCPU使用率を最適化できます。"
    },
    {
      "id": 58,
      "level": "Expert",
      "text": "SmartDBでのAdvanced Replication使用時、ネットワーク帯域制限がある環境での最適化方法はどれですか？",
      "options": [
        "レプリケーションを無効化",
        "差分レプリケーションと圧縮技術の組み合わせ",
        "全データの定期的な完全同期",
        "レプリケーション間隔を最短に設定"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ネットワーク帯域制限環境では、差分レプリケーションと適切な圧縮技術を組み合わせることで、データ転送量を最小化し効率的な同期を実現できます。"
    },
    {
      "id": 59,
      "level": "Advanced",
      "text": "SmartDBでのOracle TimesTen In-Memory Database統合時、永続化データとの整合性管理で重要なポイントはどれですか？",
      "options": [
        "In-Memoryデータのみ使用",
        "適切な同期戦略とフェイルオーバー手順の設計",
        "永続化データとの同期を行わない",
        "手動同期のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "TimesTen統合では、In-Memoryデータベースと永続化データベース間の適切な同期戦略と、障害時のフェイルオーバー手順設計が整合性管理の鍵となります。"
    },
    {
      "id": 60,
      "level": "Expert",
      "text": "SmartDBでのOracle Big Data統合において、Hadoop/Sparkクラスターとの効率的なデータ交換を実現する方法はどれですか？",
      "options": [
        "全データをOracleデータベースに集約",
        "Oracle Big Data Connectorsと適切なデータ分散戦略",
        "Big Data統合を避ける",
        "手動でのファイル転送のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Big Data統合では、Oracle Big Data Connectorsを活用し、データ特性に応じた分散戦略により、Oracle DatabaseとHadoop/Sparkエコシステム間の効率的なデータ交換を実現できます。"
    },
    {
      "id": 61,
      "level": "Advanced",
      "text": "SmartDBでのOracle Cloud統合時、オンプレミスとクラウド間でのデータ同期の最適化手法はどれですか？",
      "options": [
        "定期的な全データ同期",
        "変更データキャプチャ（CDC）と帯域幅最適化",
        "クラウド統合を行わない",
        "手動でのデータ移行のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "オンプレミス-クラウド統合では、変更データキャプチャ（CDC）により差分同期を行い、帯域幅使用量を最適化することで効率的なハイブリッド環境を構築できます。"
    },
    {
      "id": 62,
      "level": "Expert",
      "text": "SmartDBでのOracle Database Gateway使用時、異種データベース間でのトランザクション整合性を保証する方法はどれですか？",
      "options": [
        "各データベースで独立したトランザクション",
        "分散トランザクション管理とXA Protocol使用",
        "トランザクション整合性を考慮しない",
        "単一データベースのみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "異種データベース間では、分散トランザクション管理とXA Protocolを使用することで、複数データベースにまたがるトランザクションの整合性を保証できます。"
    },
    {
      "id": 63,
      "level": "Advanced",
      "text": "SmartDBでのOracle Advanced Security使用時、カラムレベル暗号化の性能影響を最小化する設計原則はどれですか？",
      "options": [
        "全ての列を暗号化",
        "機密度分析に基づく選択的暗号化とインデックス戦略",
        "暗号化を使用しない",
        "アプリケーション層での暗号化のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "カラムレベル暗号化では、データの機密度分析により必要な列のみを暗号化し、検索頻度の高い暗号化列には適切なインデックス戦略を適用することで性能影響を最小化できます。"
    },
    {
      "id": 64,
      "level": "Expert",
      "text": "SmartDBでのData Warehousing環境において、星型スキーマのクエリ性能を最大化する最適化手法はどれですか？",
      "options": [
        "正規化による完全な関係モデル",
        "ビットマップインデックスとスター変換の組み合わせ",
        "インデックスを使用しない",
        "単一の大きなテーブル設計"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Data Warehousing環境では、ディメンションテーブルにビットマップインデックスを作成し、Oracleのスター変換機能を活用することで星型スキーマクエリを最適化できます。"
    },
    {
      "id": 65,
      "level": "Advanced",
      "text": "SmartDBでのOracle Streams Advanced Queuing使用時、メッセージ処理の信頼性と性能を両立する設計はどれですか？",
      "options": [
        "同期処理のみ使用",
        "非同期処理とメッセージ永続化の適切なバランス",
        "メッセージを永続化しない",
        "単一のキューのみ使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Advanced Queuingでは、非同期処理により性能を向上させながら、重要なメッセージの永続化により信頼性を確保することで、両方の要件を満たせます。"
    },
    {
      "id": 66,
      "level": "Expert",
      "text": "SmartDBでのOracle XML DB使用時、大量XMLドキュメントでの検索性能最適化方法はどれですか？",
      "options": [
        "全XMLデータをテキスト検索",
        "XMLIndex とXPath最適化の組み合わせ",
        "XMLデータを使用しない",
        "リレーショナル形式への完全変換"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大量XMLデータでは、XMLIndexによる構造化インデックスとXPathクエリ最適化により、XMLドキュメント検索の性能を大幅に向上できます。"
    },
    {
      "id": 67,
      "level": "Advanced",
      "text": "SmartDBでのOracle Enterprise Manager統合時、大規模環境での効率的な監視戦略はどれですか？",
      "options": [
        "全パラメータの詳細監視",
        "重要メトリクス選択とアラート階層化",
        "監視を最小限に制限",
        "手動での監視のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "大規模環境では、ビジネス影響度の高いメトリクスを選択し、アラートを階層化することで、効率的な監視と迅速な問題対応を実現できます。"
    },
    {
      "id": 68,
      "level": "Expert",
      "text": "SmartDBでのWorkload-based Automatic SQL Tuning使用時、チューニング効果を最大化する設定はどれですか？",
      "options": [
        "全SQLステートメントに対して実行",
        "高負荷SQLの特定と集中的なチューニング",
        "自動チューニングを無効化",
        "手動チューニングのみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Workload-based Automatic SQL Tuningでは、システム負荷の高いSQLステートメントを特定し、集中的にチューニングすることで最大の効果を得られます。"
    },
    {
      "id": 69,
      "level": "Advanced",
      "text": "SmartDBでのOracle Database Appliance（ODA）環境での高可用性設計において最重要な要素はどれですか？",
      "options": [
        "単一ノード構成での安定性重視",
        "RAC構成とストレージ冗長化の組み合わせ",
        "高可用性機能を使用しない",
        "定期的な手動バックアップのみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ODA環境では、RAC（Real Application Clusters）によるノード冗長化とストレージ冗長化を組み合わせることで、包括的な高可用性を実現できます。"
    },
    {
      "id": 70,
      "level": "Expert",
      "text": "SmartDBでのOracle Fusion Middleware統合時、WebLogic Serverとの効率的な連携を実現する方法はどれですか？",
      "options": [
        "直接JDBC接続のみ使用",
        "GridLink DataSourceとActive GridLinkの活用",
        "Fusion Middleware統合を避ける",
        "単一の固定接続のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Fusion Middleware統合では、GridLink DataSourceとActive GridLink機能により、WebLogic ServerとSmartDB間の高性能で可用性の高い接続を実現できます。"
    },
    {
      "id": 71,
      "level": "Advanced",
      "text": "SmartDBでのOracle Database 23c新機能において、JSON Relational Dualityの最適な活用シーンはどれですか？",
      "options": [
        "従来のリレーショナルデータのみ扱う場面",
        "API開発とリレーショナルデータ整合性が重要な場面",
        "JSON機能を使用しない場面",
        "単純なキーバリューストレージ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "JSON Relational Dualityは、RESTful API開発の柔軟性とリレーショナルデータの整合性制約を両立したい場面で最大の価値を発揮します。"
    },
    {
      "id": 72,
      "level": "Expert",
      "text": "SmartDBでのマイクロサービス環境において、データベースごとの独立性とデータ整合性を両立する方法はどれですか？",
      "options": [
        "単一の共有データベース使用",
        "Saga パターンとEvent Driven Architecture",
        "データ整合性を考慮しない",
        "全てのデータを複製"
      ],
      "correctAnswerIndex": 1,
      "explanation": "マイクロサービス環境では、Sagaパターンによる分散トランザクション管理とEvent Driven Architectureにより、サービス独立性とデータ整合性を両立できます。"
    },
    {
      "id": 73,
      "level": "Advanced",
      "text": "SmartDBでのContinuous Integration/Continuous Deployment（CI/CD）パイプライン統合時の重要な考慮事項はどれですか？",
      "options": [
        "手動でのデータベース変更のみ",
        "データベーススキーマバージョニングと自動テスト統合",
        "CI/CD統合を行わない",
        "本番環境での直接テスト"
      ],
      "correctAnswerIndex": 1,
      "explanation": "CI/CDパイプラインでは、データベーススキーマのバージョニング管理と自動化されたデータベーステストを統合することで、安全で効率的なデプロイメントを実現できます。"
    },
    {
      "id": 74,
      "level": "Expert",
      "text": "SmartDBでのAI/ML統合環境において、大規模データセットでのモデルトレーニング最適化の最重要ポイントはどれですか？",
      "options": [
        "全データをメモリに展開",
        "データ局所性とベクトル処理の最適化",
        "機械学習機能を使用しない",
        "外部システムでの学習のみ"
      ],
      "correctAnswerIndex": 1,
      "explanation": "AI/ML統合では、データ移動コストを最小化するデータ局所性の確保と、データベース内ベクトル処理最適化により、大規模データでのモデル学習性能を最大化できます。"
    },
    {
      "id": 75,
      "level": "Expert",
      "text": "SmartDBでの未来志向の設計において、量子コンピューティング耐性を持つ暗号化への移行準備として重要なものはどれですか？",
      "options": [
        "現在の暗号化方式の継続使用",
        "Crypto-Agile設計とアルゴリズム抽象化",
        "暗号化を使用しない",
        "量子コンピューティングを無視"
      ],
      "correctAnswerIndex": 1,
      "explanation": "量子コンピューティング時代への準備として、Crypto-Agile設計により暗号化アルゴリズムを抽象化し、将来的なアルゴリズム変更に柔軟に対応できるアーキテクチャが重要です。"
    }
  ]
}