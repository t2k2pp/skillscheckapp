{
  "id": "ap",
  "title": "応用情報技術者試験（午前）対策",
  "description": "IPA 応用情報技術者試験の午前問題（4択）対策問題集です。基本情報より高度な技術知識、システム設計、プロジェクト管理等の分野を網羅し、実試験レベルの問題を収録しています。",
  "version": "1.0.0",
  "author": "IPA Learning Team", 
  "categories": ["IPA", "応用情報", "情報処理", "国家資格"],
  "totalQuestions": 75,
  "estimatedTime": "150-180分",
  "coverImage": "ap-logo.png",
  "color": "#7B1FA2",
  "questions": [
    {
      "id": 1,
      "level": "中級",
      "text": "システム開発におけるアーキテクチャ設計で、MVCパターンのControllerの役割として最も適切なものはどれか。",
      "options": [
        "データの永続化を行う",
        "ユーザーインタフェースを提供する",
        "ビジネスロジックを処理する",
        "ユーザー入力を受けてModelとViewを制御する"
      ],
      "correctAnswerIndex": 3,
      "explanation": "MVCパターンにおいて、Controller（コントローラー）はユーザーからの入力を受け取り、Model（モデル）とView（ビュー）を制御する役割を担います。"
    },
    {
      "id": 2,
      "level": "中級",
      "text": "データベース設計において、第3正規形の条件として正しいものはどれか。",
      "options": [
        "第2正規形であり、推移関数従属を排除している",
        "第1正規形であり、部分関数従属を排除している",
        "第2正規形であり、多値従属を排除している",
        "第1正規形であり、関数従属をすべて排除している"
      ],
      "correctAnswerIndex": 0,
      "explanation": "第3正規形は、第2正規形であり、かつ推移関数従属を排除したものです。非キー属性間の関数従属を排除します。"
    },
    {
      "id": 3,
      "level": "上級",
      "text": "分散データベースにおける2相コミットプロトコルの説明として、最も適切なものはどれか。",
      "options": [
        "すべてのサイトで同時にコミットを実行する",
        "準備フェーズとコミットフェーズの2段階でトランザクションを制御する",
        "2つのデータベースでデータを複製する",
        "2つのプロセスが交互にデータを更新する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "2相コミットプロトコルは、分散環境でのトランザクション一貫性を保つため、準備（prepare）フェーズとコミット（commit）フェーズの2段階で制御を行います。"
    },
    {
      "id": 4,
      "level": "中級",
      "text": "ソフトウェアアーキテクチャパターンで、システムを階層構造に分割するものはどれか。",
      "options": [
        "レイヤードアーキテクチャ",
        "マイクロサービス",
        "イベント駆動アーキテクチャ",
        "パイプ・フィルタ"
      ],
      "correctAnswerIndex": 0,
      "explanation": "レイヤードアーキテクチャ（層状アーキテクチャ）は、システムを階層構造に分割し、各層が下位層のサービスのみを利用する設計パターンです。"
    },
    {
      "id": 5,
      "level": "中級",
      "text": "ネットワーク設計において、冗長化の手法として適切でないものはどれか。",
      "options": [
        "デュアルホーム",
        "リンクアグリゲーション",
        "スパニングツリー",
        "ロードバランシング"
      ],
      "correctAnswerIndex": 3,
      "explanation": "ロードバランシングは負荷分散技術で、冗長化とは目的が異なります。デュアルホーム、リンクアグリゲーション、スパニングツリーは冗長化技術です。"
    },
    {
      "id": 6,
      "level": "上級",
      "text": "システムの性能評価において、キューイング理論で表されるリトルの公式はどれか。",
      "options": [
        "L = λ × W",
        "L = λ ÷ W",
        "L = W ÷ λ",
        "L = λ + W"
      ],
      "correctAnswerIndex": 0,
      "explanation": "リトルの公式は L = λ × W で表され、L：システム内の平均客数、λ：平均到着率、W：平均滞在時間の関係を示します。"
    },
    {
      "id": 7,
      "level": "中級",
      "text": "クラウドコンピューティングにおけるIaaSの説明として、最も適切なものはどれか。",
      "options": [
        "アプリケーションソフトウェアを提供",
        "開発プラットフォームを提供",
        "仮想的なハードウェア基盤を提供",
        "ネットワーク機能のみを提供"
      ],
      "correctAnswerIndex": 2,
      "explanation": "IaaS（Infrastructure as a Service）は、仮想的なサーバー、ストレージ、ネットワークなどのハードウェア基盤をクラウドサービスとして提供します。"
    },
    {
      "id": 8,
      "level": "中級",
      "text": "ソフトウェア開発におけるデザインパターンで、オブジェクトの生成を専門とするパターンはどれか。",
      "options": [
        "Observer",
        "Strategy",
        "Factory",
        "Adapter"
      ],
      "correctAnswerIndex": 2,
      "explanation": "Factoryパターンは、オブジェクトの生成処理を専門のクラスに委譲する生成パターンの一つです。"
    },
    {
      "id": 9,
      "level": "上級",
      "text": "データベースの分散処理において、CAP定理が示す内容として正しいものはどれか。",
      "options": [
        "一貫性、可用性、分断耐性の3つすべてを同時に保証できる",
        "一貫性、可用性、分断耐性のうち最大2つまでしか同時に保証できない",
        "一貫性のみを重視すべきである",
        "分断耐性は不要である"
      ],
      "correctAnswerIndex": 1,
      "explanation": "CAP定理は、分散システムにおいて一貫性（Consistency）、可用性（Availability）、分断耐性（Partition tolerance）の3特性のうち、最大2つまでしか同時に実現できないことを示します。"
    },
    {
      "id": 10,
      "level": "中級",
      "text": "プロジェクト管理におけるEVM（Earned Value Management）で、CPI（Cost Performance Index）が1.2の場合の意味はどれか。",
      "options": [
        "コストが20%超過している",
        "コストが20%効率的である",
        "スケジュールが20%遅れている",
        "品質が20%向上している"
      ],
      "correctAnswerIndex": 1,
      "explanation": "CPI（Cost Performance Index）= EV/AC で、1.2の場合は予定コストに対して20%効率的にパフォーマンスを上げていることを意味します。"
    },
    {
      "id": 11,
      "level": "中級",
      "text": "ネットワークセキュリティにおいて、DMZ（Demilitarized Zone）の目的として最も適切なものはどれか。",
      "options": [
        "内部ネットワークの完全な隔離",
        "外部からアクセス可能なサーバーを安全に設置",
        "ネットワーク速度の向上",
        "データの暗号化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "DMZ（非武装地帯）は、インターネットからアクセス可能なWebサーバー等を、内部ネットワークから分離して安全に設置するネットワーク領域です。"
    },
    {
      "id": 12,
      "level": "上級",
      "text": "データウェアハウスにおけるETL処理の説明として、適切でないものはどれか。",
      "options": [
        "Extract：データの抽出",
        "Transform：データの変換・加工",
        "Load：データの格納",
        "Execute：データの実行"
      ],
      "correctAnswerIndex": 3,
      "explanation": "ETLは、Extract（抽出）、Transform（変換）、Load（格納）の3つの処理です。Execute（実行）は含まれません。"
    },
    {
      "id": 13,
      "level": "中級",
      "text": "システム可用性を高める技術として、適切でないものはどれか。",
      "options": [
        "フェイルオーバー",
        "ロードバランシング",
        "クラスタリング",
        "データマイニング"
      ],
      "correctAnswerIndex": 3,
      "explanation": "フェイルオーバー、ロードバランシング、クラスタリングは可用性向上技術です。データマイニングはデータ分析技術で、可用性とは関係ありません。"
    },
    {
      "id": 14,
      "level": "中級",
      "text": "ソフトウェア開発におけるリスク管理で、リスクの定量評価に使用される指標はどれか。",
      "options": [
        "リスク影響度のみ",
        "リスク発生確率のみ",
        "リスク発生確率 × リスク影響度",
        "リスク発生確率 + リスク影響度"
      ],
      "correctAnswerIndex": 2,
      "explanation": "リスクの定量評価では、リスク発生確率とリスク影響度を掛け合わせて、リスクの大きさを数値化します。"
    },
    {
      "id": 15,
      "level": "中級",
      "text": "データベースのパフォーマンス最適化技術として、適切でないものはどれか。",
      "options": [
        "インデックスの作成",
        "パーティショニング",
        "クエリの最適化",
        "テーブルの非正規化"
      ],
      "correctAnswerIndex": 3,
      "explanation": "インデックス作成、パーティショニング、クエリ最適化は性能向上技術です。テーブルの非正規化は、場合によっては性能向上に寄与しますが、一般的な最適化技術ではありません。"
    },
    {
      "id": 16,
      "level": "上級",
      "text": "マイクロサービスアーキテクチャの利点として、適切でないものはどれか。",
      "options": [
        "独立したデプロイが可能",
        "技術スタックの多様性",
        "障害の局所化",
        "システム全体の複雑性軽減"
      ],
      "correctAnswerIndex": 3,
      "explanation": "マイクロサービスは独立デプロイ、技術多様性、障害局所化の利点がありますが、サービス間通信の複雑さにより全体の複雑性は増加します。"
    },
    {
      "id": 17,
      "level": "中級",
      "text": "ネットワーク管理プロトコルSNMP（Simple Network Management Protocol）の説明として、最も適切なものはどれか。",
      "options": [
        "電子メール送信プロトコル",
        "ファイル転送プロトコル",
        "ネットワーク機器の監視・制御プロトコル",
        "Web閲覧プロトコル"
      ],
      "correctAnswerIndex": 2,
      "explanation": "SNMP（Simple Network Management Protocol）は、ネットワーク機器の状態監視や設定制御を行うためのプロトコルです。"
    },
    {
      "id": 18,
      "level": "中級",
      "text": "システム開発における非機能要件として、適切でないものはどれか。",
      "options": [
        "性能要件",
        "セキュリティ要件",
        "可用性要件",
        "業務機能要件"
      ],
      "correctAnswerIndex": 3,
      "explanation": "非機能要件は、性能、セキュリティ、可用性、保守性等のシステム品質に関する要件です。業務機能要件は機能要件に分類されます。"
    },
    {
      "id": 19,
      "level": "上級",
      "text": "ソフトウェア工学における結合度の種類で、最も結合度が低い（良い）ものはどれか。",
      "options": [
        "データ結合",
        "制御結合", 
        "共通結合",
        "内容結合"
      ],
      "correctAnswerIndex": 0,
      "explanation": "結合度の強さは、データ結合（最も弱い）< スタンプ結合 < 制御結合 < 外部結合 < 共通結合 < 内容結合（最も強い）の順になります。"
    },
    {
      "id": 20,
      "level": "中級",
      "text": "システム基盤における仮想化技術の利点として、適切でないものはどれか。",
      "options": [
        "ハードウェア資源の有効活用",
        "システムの統合・集約",
        "運用管理の効率化",
        "セキュリティリスクの完全排除"
      ],
      "correctAnswerIndex": 3,
      "explanation": "仮想化は資源有効活用、統合・集約、運用効率化の利点がありますが、セキュリティリスクを完全に排除するものではありません。"
    },
    {
      "id": 21,
      "level": "中級",
      "text": "システム開発手法において、アジャイル開発の特徴として適切でないものはどれか。",
      "options": [
        "短期間の反復開発",
        "顧客との継続的なコミュニケーション",
        "詳細な事前計画の重視",
        "変化への適応重視"
      ],
      "correctAnswerIndex": 2,
      "explanation": "アジャイル開発は、詳細な事前計画よりも変化への適応を重視し、短期間の反復と継続的な顧客コミュニケーションを特徴とします。"
    },
    {
      "id": 22,
      "level": "上級",
      "text": "データベースのインデックス構造で、B+ツリーの特徴として正しいものはどれか。",
      "options": [
        "リーフノードのみにデータを格納",
        "すべてのノードにデータを格納",
        "二分木構造のみ",
        "ハッシュ構造"
      ],
      "correctAnswerIndex": 0,
      "explanation": "B+ツリーでは、データはリーフノードのみに格納され、内部ノードにはキー値のみが格納されます。これにより効率的な範囲検索が可能です。"
    },
    {
      "id": 23,
      "level": "中級",
      "text": "ネットワークセキュリティにおけるIDS（侵入検知システム）の説明として、最も適切なものはどれか。",
      "options": [
        "不正アクセスを防止する",
        "不正アクセスを検知・通報する",
        "データを暗号化する",
        "ユーザー認証を行う"
      ],
      "correctAnswerIndex": 1,
      "explanation": "IDS（Intrusion Detection System）は、ネットワークやシステムへの不正アクセスや異常な活動を検知し、管理者に通報するシステムです。"
    },
    {
      "id": 24,
      "level": "中級",
      "text": "プロジェクト管理における品質管理で、パレート図の目的として最も適切なものはどれか。",
      "options": [
        "作業の進捗管理",
        "問題の重要度の可視化",
        "コストの推移管理",
        "リスクの評価"
      ],
      "correctAnswerIndex": 1,
      "explanation": "パレート図は、問題や不具合の発生件数を多い順に並べた棒グラフで、重要な問題を特定し、優先順位付けを行うために使用されます。"
    },
    {
      "id": 25,
      "level": "中級",
      "text": "システムアーキテクチャにおけるSOA（Service Oriented Architecture）の説明として、最も適切なものはどれか。",
      "options": [
        "モノリシックなアプリケーション構成",
        "サービス単位での疎結合なシステム構成",
        "クライアント・サーバー型構成",
        "集中処理型構成"
      ],
      "correctAnswerIndex": 1,
      "explanation": "SOA（Service Oriented Architecture）は、業務機能をサービス単位に分割し、これらのサービスを疎結合で連携させるアーキテクチャです。"
    },
    {
      "id": 26,
      "level": "上級",
      "text": "コンピュータアーキテクチャにおけるスーパースカラ方式の説明として、最も適切なものはどれか。",
      "options": [
        "複数のパイプラインを並列動作させる",
        "キャッシュメモリを大容量化する",
        "クロック周波数を高速化する",
        "メモリアクセスを最適化する"
      ],
      "correctAnswerIndex": 0,
      "explanation": "スーパースカラ方式は、複数のパイプラインを並列動作させることで、1クロックサイクルで複数の命令を同時実行する技術です。"
    },
    {
      "id": 27,
      "level": "中級",
      "text": "システム運用における可用性指標で、年間稼働率99.9%の場合、年間停止時間はおよそ何時間か。",
      "options": [
        "約9時間",
        "約87時間",
        "約365時間",
        "約876時間"
      ],
      "correctAnswerIndex": 0,
      "explanation": "年間8,760時間（365日×24時間）の0.1%（100%-99.9%）は、約8.76時間≒約9時間になります。"
    },
    {
      "id": 28,
      "level": "中級",
      "text": "データベース設計におけるER図で、エンティティ間の関係を表すものはどれか。",
      "options": [
        "属性",
        "主キー",
        "リレーションシップ",
        "外部キー"
      ],
      "correctAnswerIndex": 2,
      "explanation": "ER図において、リレーションシップ（関連）は、エンティティ（実体）間の関係を表現します。"
    },
    {
      "id": 29,
      "level": "上級",
      "text": "分散システムにおけるBASE特性の説明として、適切でないものはどれか。",
      "options": [
        "基本的可用性（Basically Available）",
        "ソフト状態（Soft state）",
        "結果整合性（Eventual consistency）",
        "強整合性（Strong consistency）"
      ],
      "correctAnswerIndex": 3,
      "explanation": "BASE特性は、基本的可用性、ソフト状態、結果整合性から構成されます。強整合性はACID特性に関連する概念です。"
    },
    {
      "id": 30,
      "level": "中級",
      "text": "Webアプリケーションのセキュリティ脆弱性で、OWASP Top 10に含まれないものはどれか。",
      "options": [
        "SQLインジェクション",
        "クロスサイトスクリプティング（XSS）",
        "クロスサイトリクエストフォージェリ（CSRF）",
        "DNSキャッシュポイズニング"
      ],
      "correctAnswerIndex": 3,
      "explanation": "DNSキャッシュポイズニングはネットワークレベルの攻撃で、WebアプリケーションのOWASP Top 10には含まれません。"
    },
    {
      "id": 31,
      "level": "中級",
      "text": "ソフトウェア開発における単体テストのカバレッジの種類として、適切でないものはどれか。",
      "options": [
        "命令網羅（C0）",
        "判定条件網羅（C1）",
        "条件網羅（C2）",
        "性能網羅（CP）"
      ],
      "correctAnswerIndex": 3,
      "explanation": "テストカバレッジには、命令網羅（C0）、判定条件網羅（C1）、条件網羅（C2）等があります。性能網羅は存在しません。"
    },
    {
      "id": 32,
      "level": "上級",
      "text": "データベースの分散処理における結合処理の最適化手法として、適切でないものはどれか。",
      "options": [
        "ネスティッドループ結合",
        "ソートマージ結合",
        "ハッシュ結合", 
        "インデックス結合"
      ],
      "correctAnswerIndex": 3,
      "explanation": "ネスティッドループ結合、ソートマージ結合、ハッシュ結合は実際の結合アルゴリズムです。インデックス結合という名称の結合手法は存在しません。"
    },
    {
      "id": 33,
      "level": "中級",
      "text": "システム開発における構成管理の対象として、適切でないものはどれか。",
      "options": [
        "ソースコード",
        "設計書",
        "テスト仕様書",
        "プロジェクトメンバーの個人情報"
      ],
      "correctAnswerIndex": 3,
      "explanation": "構成管理は、ソースコード、設計書、テスト仕様書等のシステム開発成果物を管理します。プロジェクトメンバーの個人情報は対象外です。"
    },
    {
      "id": 34,
      "level": "中級",
      "text": "ネットワークプロトコルにおけるQoS（Quality of Service）の制御方法として、適切でないものはどれか。",
      "options": [
        "帯域制御",
        "優先度制御",
        "遅延制御",
        "暗号化制御"
      ],
      "correctAnswerIndex": 3,
      "explanation": "QoSは、帯域制御、優先度制御、遅延制御等によりネットワークサービス品質を制御します。暗号化制御はセキュリティ対策です。"
    },
    {
      "id": 35,
      "level": "上級",
      "text": "分散システムにおけるコンセンサスアルゴリズムの例として、適切でないものはどれか。",
      "options": [
        "Raft",
        "PBFT",
        "Paxos",
        "HTTP"
      ],
      "correctAnswerIndex": 3,
      "explanation": "Raft、PBFT、Paxosは分散システムのコンセンサス（合意）アルゴリズムです。HTTPは通信プロトコルです。"
    },
    {
      "id": 36,
      "level": "中級",
      "text": "プロジェクト管理におけるクリティカルパスの説明として、最も適切なものはどれか。",
      "options": [
        "最もコストのかかる作業経路",
        "最も複雑な作業経路",
        "最も時間のかかる作業経路",
        "最も重要度の高い作業経路"
      ],
      "correctAnswerIndex": 2,
      "explanation": "クリティカルパスは、プロジェクト開始から終了まで最も時間のかかる作業経路で、プロジェクト全体の所要期間を決定します。"
    },
    {
      "id": 37,
      "level": "中級",
      "text": "データベースのトランザクション分離レベルで、ダーティリードを防ぐ最低レベルはどれか。",
      "options": [
        "READ UNCOMMITTED",
        "READ COMMITTED",
        "REPEATABLE READ",
        "SERIALIZABLE"
      ],
      "correctAnswerIndex": 1,
      "explanation": "READ COMMITTEDレベルでは、コミットされたデータのみ読み取り可能となり、ダーティリード（未コミットデータの読み取り）を防げます。"
    },
    {
      "id": 38,
      "level": "中級",
      "text": "ソフトウェアアーキテクチャにおけるCQRS（Command Query Responsibility Segregation）の説明として、最も適切なものはどれか。",
      "options": [
        "読み取りと書き込みの処理を分離する",
        "データベースを複製する",
        "キャッシュを使用する",
        "負荷分散を行う"
      ],
      "correctAnswerIndex": 0,
      "explanation": "CQRS（Command Query Responsibility Segregation）は、データの読み取り（Query）と書き込み（Command）の処理を別々のモデルで分離するアーキテクチャパターンです。"
    },
    {
      "id": 39,
      "level": "上級",
      "text": "システム性能の測定において、Little's Lawが示す関係式はどれか。",
      "options": [
        "平均客数 = 到着率 × 平均滞在時間",
        "平均客数 = 到着率 ÷ 平均滞在時間",
        "平均客数 = 平均滞在時間 ÷ 到着率",
        "平均客数 = 到着率 + 平均滞在時間"
      ],
      "correctAnswerIndex": 0,
      "explanation": "Little's Law（リトルの公式）は、L = λ × W（平均客数 = 到着率 × 平均滞在時間）で表される待ち行列理論の基本法則です。"
    },
    {
      "id": 40,
      "level": "中級",
      "text": "ソフトウェア開発におけるDevOpsの目的として、最も適切なものはどれか。",
      "options": [
        "開発コストの削減のみ",
        "開発と運用の連携強化",
        "テスト工程の自動化のみ",
        "プログラミング言語の統一"
      ],
      "correctAnswerIndex": 1,
      "explanation": "DevOpsは、開発（Development）と運用（Operations）の連携を強化し、ソフトウェアの開発・デプロイ・運用を効率化することを目的とします。"
    },
    {
      "id": 41,
      "level": "中級",
      "text": "Webサービスの技術において、REST（Representational State Transfer）の特徴として適切でないものはどれか。",
      "options": [
        "ステートレス",
        "HTTPメソッドの活用",
        "リソース指向",
        "セッション状態の保持"
      ],
      "correctAnswerIndex": 3,
      "explanation": "RESTはステートレスな設計が特徴で、サーバー側でセッション状態を保持しません。各リクエストは独立して処理されます。"
    },
    {
      "id": 42,
      "level": "上級",
      "text": "分散システムの設計において、「結果整合性」モデルの利点として、適切でないものはどれか。",
      "options": [
        "高い可用性",
        "スケーラビリティ",
        "パーティション耐性",
        "即座の一貫性保証"
      ],
      "correctAnswerIndex": 3,
      "explanation": "結果整合性モデルは、即座の一貫性を犠牲にして高い可用性とスケーラビリティを実現します。即座の一貫性保証は特徴ではありません。"
    },
    {
      "id": 43,
      "level": "中級",
      "text": "システム監査における内部統制の評価で、統制活動の種類として適切でないものはどれか。",
      "options": [
        "予防統制",
        "発見統制",
        "訂正統制",
        "消去統制"
      ],
      "correctAnswerIndex": 3,
      "explanation": "内部統制活動には、予防統制（問題の発生防止）、発見統制（問題の検出）、訂正統制（問題の修正）があります。消去統制は存在しません。"
    },
    {
      "id": 44,
      "level": "中級",
      "text": "データベースのレプリケーション方式で、マスターサーバーからスレーブサーバーに一方向でデータを複製する方式はどれか。",
      "options": [
        "同期レプリケーション",
        "非同期レプリケーション",
        "双方向レプリケーション",
        "マスター・マスターレプリケーション"
      ],
      "correctAnswerIndex": 1,
      "explanation": "非同期レプリケーションは、マスターサーバーからスレーブサーバーに一方向でデータを複製し、若干の遅延を許容する方式です。"
    },
    {
      "id": 45,
      "level": "上級",
      "text": "ソフトウェアアーキテクチャにおけるイベント駆動アーキテクチャの特徴として、適切でないものはどれか。",
      "options": [
        "非同期処理",
        "疎結合",
        "イベントの順次処理",
        "同期的な直接呼び出し"
      ],
      "correctAnswerIndex": 3,
      "explanation": "イベント駆動アーキテクチャは、非同期処理と疎結合を特徴とし、イベントを介してコンポーネント間が通信します。同期的な直接呼び出しは行いません。"
    },
    {
      "id": 46,
      "level": "中級",
      "text": "システム開発におけるテスト技法で、境界値分析の目的として最も適切なものはどれか。",
      "options": [
        "すべての処理経路をテストする",
        "入力値の境界付近でのエラーを発見する",
        "システムの負荷耐性をテストする",
        "ユーザビリティを評価する"
      ],
      "correctAnswerIndex": 1,
      "explanation": "境界値分析は、入力値の境界付近（最小値、最大値、境界値±1等）でエラーが発生しやすいことを利用したテスト技法です。"
    },
    {
      "id": 47,
      "level": "中級",
      "text": "ネットワーク設計における帯域保証の手法として、適切でないものはどれか。",
      "options": [
        "トラフィック シェーピング",
        "帯域制限",
        "優先制御",
        "データ圧縮"
      ],
      "correctAnswerIndex": 3,
      "explanation": "トラフィックシェーピング、帯域制限、優先制御は帯域保証技術です。データ圧縮は通信量削減技術で、帯域保証とは異なります。"
    },
    {
      "id": 48,
      "level": "上級",
      "text": "システムアーキテクチャにおけるCircuit Breakerパターンの目的として、最も適切なものはどれか。",
      "options": [
        "データの暗号化",
        "障害の連鎖を防止する",
        "処理速度の向上",
        "メモリ使用量の削減"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Circuit Breakerパターンは、外部サービスの障害時に呼び出しを停止し、障害の連鎖を防いでシステム全体の安定性を保つ設計パターンです。"
    },
    {
      "id": 49,
      "level": "中級",
      "text": "プロジェクト管理におけるEVMで、SV（Schedule Variance）がマイナスの場合の意味はどれか。",
      "options": [
        "予定より進んでいる",
        "予定より遅れている",
        "予算より安い",
        "予算より高い"
      ],
      "correctAnswerIndex": 1,
      "explanation": "SV（Schedule Variance）= EV - PV で、マイナスの場合は Earned Value < Planned Value となり、予定より遅れていることを意味します。"
    },
    {
      "id": 50,
      "level": "中級",
      "text": "データベースにおけるストアドプロシージャの利点として、適切でないものはどれか。",
      "options": [
        "処理の高速化",
        "ネットワークトラフィックの削減",
        "セキュリティの向上",
        "データベースの独立性向上"
      ],
      "correctAnswerIndex": 3,
      "explanation": "ストアドプロシージャは処理高速化、トラフィック削減、セキュリティ向上の利点がありますが、特定データベースに依存するため独立性は低下します。"
    },
    {
      "id": 51,
      "level": "上級",
      "text": "分散キャッシュシステムにおけるConsistent Hashingの目的として、最も適切なものはどれか。",
      "options": [
        "データの暗号化",
        "ノード追加・削除時の再配置コスト最小化",
        "検索速度の向上",
        "メモリ使用量の削減"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Consistent Hashingは、分散システムでノードの追加・削除が発生した際のデータ再配置を最小限に抑える手法です。"
    },
    {
      "id": 52,
      "level": "中級",
      "text": "ソフトウェア開発における継続的インテグレーション（CI）の利点として、適切でないものはどれか。",
      "options": [
        "統合時の問題の早期発見",
        "開発効率の向上",
        "品質の向上",
        "開発コストの完全な削減"
      ],
      "correctAnswerIndex": 3,
      "explanation": "継続的インテグレーションは、問題の早期発見、開発効率・品質向上に寄与しますが、開発コストを完全に削減するものではありません。"
    },
    {
      "id": 53,
      "level": "中級",
      "text": "Webアプリケーションにおけるセッション管理の脆弱性として、適切でないものはどれか。",
      "options": [
        "セッションハイジャック",
        "セッション固定攻撃",
        "クロスサイトスクリプティング",
        "SQLインジェクション"
      ],
      "correctAnswerIndex": 3,
      "explanation": "セッションハイジャック、セッション固定攻撃、XSSはセッション管理の脆弱性です。SQLインジェクションはデータベースアクセスの脆弱性です。"
    },
    {
      "id": 54,
      "level": "上級",
      "text": "分散システムの設計における「Saga パターン」の説明として、最も適切なものはどれか。",
      "options": [
        "データの暗号化手法",
        "分散トランザクションの管理手法",
        "負荷分散の手法",
        "データ複製の手法"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Sagaパターンは、マイクロサービスアーキテクチャにおいて、複数のサービスにまたがる分散トランザクションを管理する設計パターンです。"
    },
    {
      "id": 55,
      "level": "中級",
      "text": "システム開発における要求工学の活動として、適切でないものはどれか。",
      "options": [
        "要求の抽出",
        "要求の分析",
        "要求の仕様化",
        "要求の実装"
      ],
      "correctAnswerIndex": 3,
      "explanation": "要求工学は、要求の抽出、分析、仕様化、妥当性確認等を行います。要求の実装は設計・開発フェーズで行われます。"
    },
    {
      "id": 56,
      "level": "中級",
      "text": "データベース設計におけるパーティショニングの利点として、適切でないものはどれか。",
      "options": [
        "クエリ性能の向上",
        "保守性の向上",
        "可用性の向上",
        "データ整合性の完全保証"
      ],
      "correctAnswerIndex": 3,
      "explanation": "パーティショニングは性能、保守性、可用性の向上に寄与しますが、データ整合性を完全保証するものではありません。"
    },
    {
      "id": 57,
      "level": "上級",
      "text": "システムアーキテクチャにおけるBulkheadパターンの目的として、最も適切なものはどれか。",
      "options": [
        "処理速度の向上",
        "障害の影響を局所化する",
        "メモリ使用量の削減",
        "データの暗号化"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Bulkheadパターンは、システムの一部で障害が発生した際に、その影響を他の部分に波及させないよう隔離（局所化）する設計パターンです。"
    },
    {
      "id": 58,
      "level": "中級",
      "text": "プロジェクト管理におけるリスク管理プロセスとして、適切でないものはどれか。",
      "options": [
        "リスクの特定",
        "リスクの分析",
        "リスク対応計画",
        "リスクの完全排除"
      ],
      "correctAnswerIndex": 3,
      "explanation": "リスク管理は、特定、分析、対応計画、監視・制御のプロセスで構成されます。すべてのリスクを完全排除することは現実的ではありません。"
    },
    {
      "id": 59,
      "level": "中級",
      "text": "ネットワークアーキテクチャにおけるSDN（Software Defined Network）の特徴として、適切でないものはどれか。",
      "options": [
        "制御プレーンとデータプレーンの分離",
        "中央集権的な制御",
        "プログラマブルなネットワーク",
        "物理的な配線の自動変更"
      ],
      "correctAnswerIndex": 3,
      "explanation": "SDNは制御プレーンとデータプレーンの分離、中央集権制御、プログラマブル制御を特徴としますが、物理配線は手動で行います。"
    },
    {
      "id": 60,
      "level": "上級",
      "text": "ソフトウェアアーキテクチャにおけるHexagonal Architecture（ポート・アダプターパターン）の目的として、最も適切なものはどれか。",
      "options": [
        "処理速度の最適化",
        "ビジネスロジックの外部依存からの分離",
        "データベースアクセスの高速化",
        "ユーザーインタフェースの改善"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Hexagonal Architecture（六角形アーキテクチャ）は、ビジネスロジックを外部の技術的詳細（データベース、UI等）から分離し、テスタビリティと保守性を向上させる設計パターンです。"
    },
    {
      "id": 61,
      "level": "中級",
      "text": "システム性能の評価において、レスポンスタイムとスループットの関係として正しいものはどれか。",
      "options": [
        "常に正比例の関係",
        "常に反比例の関係",
        "負荷によって関係が変化する",
        "全く関係がない"
      ],
      "correctAnswerIndex": 2,
      "explanation": "レスポンスタイムとスループットの関係は、システムの負荷状況によって変化します。軽負荷時は独立的、重負荷時は反比例的になる傾向があります。"
    },
    {
      "id": 62,
      "level": "中級",
      "text": "データベースのクエリ最適化において、統計情報の役割として最も適切なものはどれか。",
      "options": [
        "データの暗号化",
        "最適な実行計画の決定",
        "データの圧縮",
        "バックアップの作成"
      ],
      "correctAnswerIndex": 1,
      "explanation": "データベースの統計情報は、オプティマイザが最適なクエリ実行計画を決定するために使用されます。"
    },
    {
      "id": 63,
      "level": "上級",
      "text": "マイクロサービスアーキテクチャにおけるAPI Gatewayの役割として、適切でないものはどれか。",
      "options": [
        "ルーティング",
        "認証・認可",
        "レート制限",
        "データベースの直接操作"
      ],
      "correctAnswerIndex": 3,
      "explanation": "API Gatewayは、ルーティング、認証・認可、レート制限等を担当しますが、データベースを直接操作することはありません。"
    },
    {
      "id": 64,
      "level": "中級",
      "text": "ソフトウェア開発における技術的負債の説明として、最も適切なものはどれか。",
      "options": [
        "開発費用の超過",
        "短期的解決策により蓄積される将来のコスト",
        "プロジェクトの遅延",
        "人材不足による問題"
      ],
      "correctAnswerIndex": 1,
      "explanation": "技術的負債は、短期的な解決策や設計の妥協により、将来的に発生する追加の開発・保守コストを指します。"
    },
    {
      "id": 65,
      "level": "中級",
      "text": "システム運用における監視の観点として、適切でないものはどれか。",
      "options": [
        "可用性監視",
        "性能監視",
        "セキュリティ監視",
        "開発効率監視"
      ],
      "correctAnswerIndex": 3,
      "explanation": "システム運用監視では、可用性、性能、セキュリティ等を監視します。開発効率監視は開発プロセスの管理で、運用監視とは異なります。"
    },
    {
      "id": 66,
      "level": "上級",
      "text": "分散システムにおけるVector Clockの目的として、最も適切なものはどれか。",
      "options": [
        "システム時刻の同期",
        "イベントの因果関係の追跡",
        "データの暗号化",
        "負荷分散"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Vector Clock（ベクタークロック）は、分散システムにおいてイベント間の因果関係を追跡し、論理的な時刻順序を決定するためのアルゴリズムです。"
    },
    {
      "id": 67,
      "level": "中級",
      "text": "ソフトウェア開発におけるコードレビューの利点として、適切でないものはどれか。",
      "options": [
        "バグの早期発見",
        "知識の共有",
        "コード品質の向上",
        "開発速度の向上"
      ],
      "correctAnswerIndex": 3,
      "explanation": "コードレビューは、バグ発見、知識共有、品質向上に寄与しますが、レビューに時間を要するため、短期的には開発速度は低下します。"
    },
    {
      "id": 68,
      "level": "上級",
      "text": "データベースのクエリ処理において、Cost-Based Optimizerの動作原理として最も適切なものはどれか。",
      "options": [
        "常に同じ実行計画を使用",
        "統計情報を基にコストを推定して最適計画を選択",
        "ランダムに実行計画を選択",
        "最初に見つかった計画を使用"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Cost-Based Optimizer（コストベースオプティマイザー）は、統計情報を基に各実行計画のコストを推定し、最もコストの低い計画を選択します。"
    },
    {
      "id": 69,
      "level": "中級",
      "text": "システムアーキテクチャにおけるCQRS（Command Query Responsibility Segregation）の利点として、適切でないものはどれか。",
      "options": [
        "読み取り処理の最適化",
        "書き込み処理の最適化",
        "スケーラビリティの向上",
        "実装の単純化"
      ],
      "correctAnswerIndex": 3,
      "explanation": "CQRSは読み取り・書き込み最適化、スケーラビリティ向上の利点がありますが、読み取り用と書き込み用のモデルを分離するため実装は複雑になります。"
    },
    {
      "id": 70,
      "level": "中級",
      "text": "プロジェクト管理におけるステークホルダー管理で、最も重要な活動はどれか。",
      "options": [
        "ステークホルダーの完全な排除",
        "ステークホルダーの特定と分析",
        "ステークホルダーの要求すべてを受け入れ",
        "ステークホルダーとの接触回避"
      ],
      "correctAnswerIndex": 1,
      "explanation": "ステークホルダー管理では、まずプロジェクトに影響を与える・受けるステークホルダーを特定し、その影響度や関心度を分析することが重要です。"
    },
    {
      "id": 71,
      "level": "上級",
      "text": "分散データベースにおけるShardingの課題として、適切でないものはどれか。",
      "options": [
        "データの再配置",
        "結合処理の複雑化",
        "一意性制約の実装困難",
        "単一障害点の増加"
      ],
      "correctAnswerIndex": 3,
      "explanation": "Shardingはデータを分散させるため、単一障害点は減少します。データ再配置、結合処理複雑化、一意性制約実装困難は実際の課題です。"
    },
    {
      "id": 72,
      "level": "中級",
      "text": "システム開発における品質保証活動として、適切でないものはどれか。",
      "options": [
        "静的解析",
        "動的テスト",
        "コードレビュー",
        "機能追加"
      ],
      "correctAnswerIndex": 3,
      "explanation": "静的解析、動的テスト、コードレビューは品質保証活動です。機能追加は開発活動で、品質保証活動ではありません。"
    },
    {
      "id": 73,
      "level": "上級",
      "text": "分散システムにおけるGossip Protocolの特徴として、適切でないものはどれか。",
      "options": [
        "疫学的情報伝播",
        "完全な信頼性保証",
        "スケーラビリティ",
        "単一障害点の排除"
      ],
      "correctAnswerIndex": 1,
      "explanation": "Gossip Protocolは疫学的（epidemic）に情報を伝播し、スケーラビリティと単一障害点排除の特徴がありますが、完全な信頼性は保証しません。"
    },
    {
      "id": 74,
      "level": "中級",
      "text": "ソフトウェア開発におけるメトリクス収集の目的として、適切でないものはどれか。",
      "options": [
        "品質の定量評価",
        "プロセスの改善",
        "プロジェクト管理の支援",
        "個人の評価のみ"
      ],
      "correctAnswerIndex": 3,
      "explanation": "メトリクス収集は、品質評価、プロセス改善、プロジェクト管理支援等が目的です。個人評価のみが目的ではありません。"
    },
    {
      "id": 75,
      "level": "中級",
      "text": "システム開発における非機能テストの種類として、適切でないものはどれか。",
      "options": [
        "性能テスト",
        "セキュリティテスト",
        "ユーザビリティテスト",
        "機能確認テスト"
      ],
      "correctAnswerIndex": 3,
      "explanation": "性能テスト、セキュリティテスト、ユーザビリティテストは非機能テストです。機能確認テストは機能テストに分類されます。"
    }
  ]
}